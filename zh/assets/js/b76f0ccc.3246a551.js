(self.webpackChunkactivejdocs=self.webpackChunkactivejdocs||[]).push([[6342],{77618:function(e,t,a){"use strict";var r=a(67294),n=a(39962);t.Z=function(e){var t=e.url,a=e.text,i=e.isInline,m=void 0===i||i,s=e.children,l=(0,n.Z)().siteConfig,p=t.startsWith("/examples")?l.customFields.githubExamplesBranch:l.customFields.githubBranch;return r.createElement("a",{style:m?{}:{display:"block",marginBottom:"16px"},href:l.customFields.githubUrl+"/"+p+t,target:"_blank"},a||s)}},14304:function(e,t,a){"use strict";var r=a(67294),n=a(21140),i=a.n(n);i().initialize({startOnLoad:!0});t.Z=function(e){var t=e.chart;return(0,r.useEffect)((function(){i().contentLoaded()}),[]),r.createElement("div",{className:"mermaid"},t)}},77815:function(e,t,a){"use strict";a(67294);var r=a(39962);t.Z=function(e){var t=e.name,a=(0,r.Z)().siteConfig;if(!t)throw new Error("Variable name is required");if(void 0===a.customFields[t])throw new Error("Variable "+t+" not exist");return a.customFields[t]}},20346:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return c},default:function(){return v}});var r=a(83117),n=a(80102),i=(a(67294),a(3905)),m=a(77618),s=a(14304),l=a(77815),p=["components"],o={title:"ActiveJ | Datastream\uff0c\u4ee5\u6700\u5c0f\u7684\u5f00\u9500\u5b9e\u73b0\u5f02\u6b65\u53cd\u5e94\u5f0fJava\u6d41",description:"\u5177\u6709\u6781\u4f4e\u5f00\u9500\u7684\u5f02\u6b65\u53cd\u5e94\u5f0fJava\u6d41",sidebar_label:"\u6570\u636e\u6d41",keywords:["\u6570\u636e\u6d41","\u53cd\u5e94\u5f0f\u6d41","\u5f02\u6b65\u53cd\u5e94\u5f0f\u6d41","java","JAVA\u6846\u67b6"]},u="\u6570\u636e\u6d41",d={unversionedId:"async-io/datastream",id:"async-io/datastream",isDocsHomePage:!1,title:"ActiveJ | Datastream\uff0c\u4ee5\u6700\u5c0f\u7684\u5f00\u9500\u5b9e\u73b0\u5f02\u6b65\u53cd\u5e94\u5f0fJava\u6d41",description:"\u5177\u6709\u6781\u4f4e\u5f00\u9500\u7684\u5f02\u6b65\u53cd\u5e94\u5f0fJava\u6d41",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/async-io/datastream.mdx",sourceDirName:"async-io",slug:"/async-io/datastream",permalink:"/zh/async-io/datastream",tags:[],version:"current",frontMatter:{title:"ActiveJ | Datastream\uff0c\u4ee5\u6700\u5c0f\u7684\u5f00\u9500\u5b9e\u73b0\u5f02\u6b65\u53cd\u5e94\u5f0fJava\u6d41",description:"\u5177\u6709\u6781\u4f4e\u5f00\u9500\u7684\u5f02\u6b65\u53cd\u5e94\u5f0fJava\u6d41",sidebar_label:"\u6570\u636e\u6d41",keywords:["\u6570\u636e\u6d41","\u53cd\u5e94\u5f0f\u6d41","\u5f02\u6b65\u53cd\u5e94\u5f0f\u6d41","java","JAVA\u6846\u67b6"]},sidebar:"docs",previous:{title:"CSP",permalink:"/zh/async-io/csp"},next:{title:"Net",permalink:"/zh/async-io/net"}},c=[{value:"\u6982\u8ff0",id:"\u6982\u8ff0",children:[],level:2},{value:"\u7279\u70b9",id:"\u7279\u70b9",children:[],level:2},{value:"\u4e0eCSP\u7684\u6bd4\u8f83",id:"\u4e0ecsp\u7684\u6bd4\u8f83",children:[],level:2},{value:"\u57fa\u51c6",id:"\u57fa\u51c6",children:[],level:2},{value:"\u5b9e\u4f8b",id:"\u5b9e\u4f8b",children:[{value:"\u7b80\u5355\u7684\u4f9b\u5e94\u5546",id:"\u7b80\u5355\u7684\u4f9b\u5e94\u5546",children:[],level:3},{value:"\u7b80\u5355\u7684\u6d88\u8d39\u8005",id:"\u7b80\u5355\u7684\u6d88\u8d39\u8005",children:[],level:3},{value:"\u5b9a\u5236\u53d8\u538b\u5668",id:"\u5b9a\u5236\u53d8\u538b\u5668",children:[],level:3},{value:"\u5185\u7f6e\u6d41\u8282\u70b9",id:"\u5185\u7f6e\u6d41\u8282\u70b9",children:[],level:3}],level:2}],k={toc:c};function v(e){var t=e.components,a=(0,n.Z)(e,p);return(0,i.kt)("wrapper",(0,r.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u6570\u636e\u6d41"},"\u6570\u636e\u6d41"),(0,i.kt)("h2",{id:"\u6982\u8ff0"},"\u6982\u8ff0"),(0,i.kt)("p",null,"Datastream\u662f\u4e00\u4e2a\u975e\u5e38\u5feb\u901f\u7684\u53cd\u5e94\u5f0f\u6d41\u7684\u5b9e\u73b0\u3002 \u5b83\u5bf9\u670d\u52a1\u5668\u5185\u548c\u670d\u52a1\u5668\u95f4\u7684 \u901a\u4fe1\u548c\u5f02\u6b65\u6570\u636e\u5904\u7406\u975e\u5e38\u6709\u7528\u3002"),(0,i.kt)("h2",{id:"\u7279\u70b9"},"\u7279\u70b9"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u4e00\u4e2a\u73b0\u4ee3\u7684\u5f02\u6b65\u53cd\u5e94\u6d41\u7684\u5b9e\u73b0\uff08\u4e0d\u540c\u4e8eJava 8\u4e2d\u7684\u6d41\u548c\u4f20\u7edf\u7684\u57fa\u4e8e\u7ebf\u7a0b\u7684\u963b\u585e\u6d41\uff09\u3002"),(0,i.kt)("li",{parentName:"ul"},"\u5177\u6709\u6781\u5176\u6709\u6548\u7684\u80cc\u538b\u63a7\u5236\u7684\u5f02\u6b65\u6027\uff0c\u4ee5\u5904\u7406\u6570\u636e\u6e90\u901f\u5ea6\u7684\u81ea\u7136\u4e0d\u5e73\u8861\u95ee\u9898"),(0,i.kt)("li",{parentName:"ul"},"\u53ef\u7ec4\u5408\u7684\u6d41\u64cd\u4f5c\uff08\u6620\u5c04\u5668\u3001\u8fd8\u539f\u5668\u3001\u8fc7\u6ee4\u5668\u3001\u5206\u7c7b\u5668\u3001\u5408\u5e76/\u62c6\u5206\u5668\u3001\u538b\u7f29\u3001\u5e8f\u5217\u5316\uff09\u3002"),(0,i.kt)("li",{parentName:"ul"},"\u5728 ",(0,i.kt)("a",{parentName:"li",href:"/zh/async-io/eventloop"},"Eventloop\u6a21\u5757\u4e4b\u4e0a\u7684\u57fa\u4e8e\u6d41\u7684\u7f51\u7edc\u548c\u6587\u4ef6I/O")),(0,i.kt)("li",{parentName:"ul"},"\u4e0e ",(0,i.kt)("a",{parentName:"li",href:"/zh/async-io/csp"},"CSP\u6a21\u5757\u76f8\u517c\u5bb9"))),(0,i.kt)("h2",{id:"\u4e0ecsp\u7684\u6bd4\u8f83"},"\u4e0eCSP\u7684\u6bd4\u8f83"),(0,i.kt)("p",null,"Datastream\u4e0eCSP\u6a21\u5757\u6709\u5f88\u591a\u5171\u540c\u4e4b\u5904\u3002 \u867d\u7136\u5b83\u4eec\u90fd\u662f\u4e3aI/O\u5904\u7406\u800c\u8bbe\u8ba1\u7684\uff0c\u4f46\u6709\u51e0\u4e2a\u91cd\u8981\u7684\u533a\u522b\u3002"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null}),(0,i.kt)("th",{parentName:"tr",align:null},"\u6570\u636e\u6d41"),(0,i.kt)("th",{parentName:"tr",align:null},"CSP"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"\u4fef\u89c6\u3002")),(0,i.kt)("td",{parentName:"tr",align:null},"\u6781\u4f4e\uff1a\u6d41\u53ef\u4ee5\u75281\u4e2a\u865a\u62df\u8c03\u7528\u542f\u52a8\uff0c\u77ed\u8def\u8bc4\u4f30\u4f18\u5316\u4e86\u6027\u80fd"),(0,i.kt)("td",{parentName:"tr",align:null},"\u6ca1\u6709\u77ed\u8def\u8bc4\u4f30\uff0c\u5f00\u9500\u8f83\u5927")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"\u541e\u5410\u901f\u5ea6\u3002")),(0,i.kt)("td",{parentName:"tr",align:null},"\u901f\u5ea6\u6781\u5feb (",(0,i.kt)("em",{parentName:"td"},"360 880 548 ops/sec"),")"),(0,i.kt)("td",{parentName:"tr",align:null},"\u5feb (",(0,i.kt)("em",{parentName:"td"},"105 932 203 ops/sec"),")\uff0c\u4f46\u6bd4Datastream\u6162\u3002")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"\u4f18\u5316\u7684\u662f\u3002")),(0,i.kt)("td",{parentName:"tr",align:null},"\u5c0f\u5757\u7684\u6570\u636e"),(0,i.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49\u89c4\u6a21\u7684\u7269\u4f53\uff0c ",(0,i.kt)("a",{parentName:"td",href:"/zh/misc/bytebuf"},(0,i.kt)("inlineCode",{parentName:"a"},"ByteBufs")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"\u7f16\u7a0b\u6a21\u5f0f\u3002")),(0,i.kt)("td",{parentName:"tr",align:null},"\u66f4\u52a0\u590d\u6742"),(0,i.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355\u800c\u65b9\u4fbf")))),(0,i.kt)("p",null,"\u4e3a\u4e86\u63d0\u4f9b\u6700\u5927\u7684\u6548\u7387\uff0cActiveJ\u5e7f\u6cdb\u5229\u7528\u4e86CSP\u548cDatastream\u7684\u7ec4\u5408\u3002 \u4e3a\u4e86\u8fd9\u4e2a\u76ee\u7684\u3002 ",(0,i.kt)(m.Z,{url:"/core-csp/src/main/java/io/activej/csp/ChannelSupplier.java",mdxType:"Githublink"},"\u6e20\u9053\u4f9b\u5e94\u5546"),", ",(0,i.kt)(m.Z,{url:"/core-csp/src/main/java/io/activej/csp/ChannelConsumer.java",mdxType:"Githublink"},'\u6e20\u9053\u6d88\u8d39\u8005"\u3002'),", ",(0,i.kt)(m.Z,{url:"/core-datastream/src/main/java/io/activej/datastream/StreamSupplier.java",mdxType:"Githublink"},'\u6d41\u52a8\u4f9b\u5e94\u5546"\u3002')," \u548c ",(0,i.kt)(m.Z,{url:"/core-datastream/src/main/java/io/activej/datastream/StreamConsumer.java",mdxType:"Githublink"},'\u6d41\u6c34\u7ebf\u6d88\u8d39\u8005"\uff08StreamConsumer\uff09\u3002')," \u6709 ",(0,i.kt)("inlineCode",{parentName:"p"},"transformWith()")," \u65b9\u6cd5\u548c\u7279\u6b8a\u7684Transformer\u63a5\u53e3\u3002 \u4f7f\u7528\u8fd9\u4e9b\u65b9\u6cd5\u548c\u63a5\u53e3\uff0c\u4f60\u53ef\u4ee5\u5c06\u901a\u9053\u65e0\u7f1d\u5730\u8f6c\u6362\u4e3a\u5176\u4ed6\u901a\u9053\u6216\u6570\u636e\u6d41\uff0c\u53cd\u4e4b\u4ea6\u7136\uff0c\u521b\u5efa\u8fd9\u79cd\u8f6c\u6362\u7684\u94fe\u3002"),(0,i.kt)("h2",{id:"\u57fa\u51c6"},"\u57fa\u51c6"),(0,i.kt)("p",null,"\u6211\u4eec\u5df2\u7ecf\u6d4b\u91cf\u4e86Datastream\u7684\u6027\u80fd(",(0,i.kt)("inlineCode",{parentName:"p"},"StreamSupplier")," \u5c06100M\u7684\u6574\u6570\u5bf9\u8c61\u6d41\u5411 ",(0,i.kt)("inlineCode",{parentName:"p"},"StreamConsumer")," \u573a\u666f) \uff0c\u5e76\u5f97\u5230\u4e86\u4ee5\u4e0b\u7ed3\u679c\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"\u65f6\u95f4\uff1a2771ms\uff1b\u5e73\u5747\u65f6\u95f4\uff1a277.1ms\uff1b\u6700\u4f73\u65f6\u95f4\uff1a275ms\uff1b\u6700\u5dee\u65f6\u95f4\uff1a281ms\uff1b\u6bcf\u79d2\u64cd\u4f5c\u6570\uff1a360 880 548\n")),(0,i.kt)("p",null,"\u6211\u4eec\u8fd8\u6d4b\u91cf\u4e86\u540c\u65f6\u4f7f\u7528Datastream\u548cCSP\u7684TCP\u670d\u52a1\u5668\u6027\u80fd\uff0c\u5f97\u5230\u7684\u5e73\u5747\u7ed3\u679c\u662f\uff1a ",(0,i.kt)("strong",{parentName:"p"},"47 495 905\u6b21/\u79d2"),"\u3002"),(0,i.kt)("p",null,"\u4f60\u53ef\u4ee5\u5728\u4ee5\u4e0b\u7f51\u7ad9\u627e\u5230\u57fa\u51c6\u6765\u6e90 ",(0,i.kt)(m.Z,{url:"/benchmarks/datastream/src/main/java/io/activej/datastream/DatastreamBenchmark.java",mdxType:"Githublink"},(0,i.kt)("strong",{parentName:"p"},"GitHub"))),(0,i.kt)("h2",{id:"\u5b9e\u4f8b"},"\u5b9e\u4f8b"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#simple-supplier"},"\u7b80\u5355\u7684\u4f9b\u5e94\u5546")," - \u5c55\u793a\u4e86\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 ",(0,i.kt)("inlineCode",{parentName:"li"},"StreamSupplier")," \uff0c\u5e76\u5c06\u4e00\u4e9b\u6570\u636e\u6d41\u8f6c\u5230 ",(0,i.kt)("inlineCode",{parentName:"li"},"StreamConsumer\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#simple-consumer"},"\u7b80\u5355\u7684\u6d88\u8d39\u8005")," - \u5c55\u793a\u4e86\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 ",(0,i.kt)("inlineCode",{parentName:"li"},"StreamConsumer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#custom-transformer"},"\u81ea\u5b9a\u4e49\u53d8\u538b\u5668")," - \u663e\u793a\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 ",(0,i.kt)(m.Z,{url:"/core-datastream/src/main/java/io/activej/datastream/processor/StreamTransformer.java",mdxType:"Githublink"},'"\u6d41\u5a92\u4f53\u8f6c\u6362\u5668"\u3002'),"\uff0c\u5b83\u63a5\u6536\u5b57\u7b26\u4e32\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u5176\u957f\u5ea6\uff0c\u5982\u679c\u5b83\u5c0f\u4e8e ",(0,i.kt)("inlineCode",{parentName:"li"},"MAX_LENGTH"),"\u3002"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#built-in-stream-nodes"},"\u5185\u7f6e\u6d41\u8282\u70b9\u793a\u4f8b")," - \u5c55\u793a\u4e86\u4e00\u4e9b\u5185\u7f6eDatastream\u7684\u53ef\u80fd\u6027\uff0c\u5982\u8fc7\u6ee4\u3001\u5206\u5272\u3001\u8054\u5408\u548c\u6620\u5c04\u3002")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"\u8981\u8fd0\u884c\u4f8b\u5b50\uff0c\u4f60\u9700\u8981\u4eceGitHub\u514b\u9686ActiveJ"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/activej/activej\n")),(0,i.kt)("p",{parentName:"div"},"\u5e76\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2aMaven\u9879\u76ee\u5bfc\u5165\u3002 \u67e5\u770b\u6807\u7b7e ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(l.Z,{name:"currentVersion",mdxType:"Variable"})),"\u3002 \u5728\u8fd0\u884c\u8fd9\u4e9b\u4f8b\u5b50\u4e4b\u524d\uff0c\u5148\u5efa\u7acb\u9879\u76ee\u3002 \u8fd9\u4e9b\u4f8b\u5b50\u4f4d\u4e8e ",(0,i.kt)("inlineCode",{parentName:"p"},"activej/examples/core/datastream\u3002")))),(0,i.kt)("h3",{id:"\u7b80\u5355\u7684\u4f9b\u5e94\u5546"},"\u7b80\u5355\u7684\u4f9b\u5e94\u5546"),(0,i.kt)("p",null,"\u5f53\u4f60\u8fd0\u884c ",(0,i.kt)(m.Z,{url:"/examples/core/datastream/src/main/java/SupplierExample.java",mdxType:"Githublink"},'"SupplierExample"\uff08\u4f9b\u5e94\u5546\u5b9e\u4f8b\uff09\u3002'),"\uff0c\u4f60\u4f1a\u770b\u5230\u4ee5\u4e0b\u8f93\u51fa\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"\u6536\u5230\u7684\u6d88\u8d39\u8005\u3002[0, 1, 2, 3, 4]\n")),(0,i.kt)("p",null,"\u8fd9\u4e2a\u8f93\u51fa\u4ee3\u8868\u4e86\u6211\u4eec\u81ea\u5b9a\u4e49\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"StreamSupplier")," \u63d0\u4f9b\u7ed9 ",(0,i.kt)("inlineCode",{parentName:"p"},"StreamConsumer"),"\u7684\u6570\u636e\u3002 \u8ba9\u6211\u4eec\u6765\u770b\u770b \uff0c\u770b\u4e00\u4e0b\u6267\u884c\u60c5\u51b5\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/datastream/src/main/java/SupplierExample.java tag=EXAMPLE",url:"/examples/core/datastream/src/main/java/SupplierExample.java",tag:"EXAMPLE"},'public final class SupplierExample {\n  public static void main(String[] args) {\n\n    //create an eventloop for streams operations\n    Eventloop eventloop = Eventloop.create().withCurrentThread();\n    //create a supplier of some numbers\n    StreamSupplier<Integer> supplier = StreamSupplier.of(0, 1, 2, 3, 4);\n    //creating a consumer for our supplier\n    StreamConsumerToList<Integer> consumer = StreamConsumerToList.create();\n\n    //streaming supplier\'s numbers to consumer\n    supplier.streamTo(consumer);\n\n    //when stream completes, streamed data is printed out\n    consumer.getResult().whenResult(result -> System.out.println("Consumer received: " + result));\n\n    //start eventloop\n    eventloop.run();\n  }\n}\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(m.Z,{url:"/examples/core/datastream/src/main/java/SupplierExample.java",mdxType:"Githublink"},"\u5728GitHub\u4e0a\u770b\u5230\u5b8c\u6574\u7684\u4f8b\u5b50"))),(0,i.kt)("h3",{id:"\u7b80\u5355\u7684\u6d88\u8d39\u8005"},"\u7b80\u5355\u7684\u6d88\u8d39\u8005"),(0,i.kt)("p",null,"\u5f53\u4f60\u8fd0\u884c ",(0,i.kt)(m.Z,{url:"/examples/core/datastream/src/main/java/ConsumerExample.java",mdxType:"Githublink"},(0,i.kt)("inlineCode",{parentName:"p"},"\u6d88\u8d39\u8005\u5b9e\u4f8b")),"\uff0c\u4f60\u4f1a\u770b\u5230\u4ee5\u4e0b\u8f93\u51fa\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"\u6536\u5230\u30021\n\u6536\u5230\u30022\n\u6536\u5230\u30023\n\u6536\u5230\u7684\u6d41\u7ed3\u675f\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ConsumerExample")," \u8868\u793a\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u6d88\u8d39\u8005\uff0c\u5b83\u6269\u5c55\u4e86 ",(0,i.kt)(m.Z,{url:"/core-datastream/src/main/java/io/activej/datastream/AbstractStreamConsumer.java",mdxType:"Githublink"},(0,i.kt)("inlineCode",{parentName:"p"},"AbstractStreamConsumer"))," \u800c\u53ea\u662f\u6253\u5370\u51fa\u6536\u5230\u7684\u6570\u636e\u3002 \u6d41\u5a92\u4f53\u8fc7\u7a0b\u662f\u901a\u8fc7\u91cd\u8f7d\u65b9\u6cd5 ",(0,i.kt)("inlineCode",{parentName:"p"},"onStarted()"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"onEndOfStream()")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"onError()"),"\u6765\u7ba1\u7406\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/datastream/src/main/java/ConsumerExample.java tag=EXAMPLE",url:"/examples/core/datastream/src/main/java/ConsumerExample.java",tag:"EXAMPLE"},'public final class ConsumerExample<T> extends AbstractStreamConsumer<T> {\n  @Override\n  protected void onStarted() {\n    resume(x -> System.out.println("received: " + x));\n  }\n\n  @Override\n  protected void onEndOfStream() {\n    System.out.println("End of stream received");\n    acknowledge();\n  }\n\n  @Override\n  protected void onError(Exception t) {\n    System.out.println("Error handling logic must be here. No confirmation to upstream is needed");\n  }\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(m.Z,{url:"/examples/core/datastream/src/main/java/ConsumerExample.java",mdxType:"Githublink"},"\u5728GitHub\u4e0a\u770b\u5230\u5b8c\u6574\u7684\u4f8b\u5b50"))),(0,i.kt)("h3",{id:"\u5b9a\u5236\u53d8\u538b\u5668"},"\u5b9a\u5236\u53d8\u538b\u5668"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"#"},(0,i.kt)(m.Z,{url:"/examples/core/datastream/src/main/java/TransformerExample.java",mdxType:"Githublink"},(0,i.kt)("inlineCode",{parentName:"a"},"\u53d8\u6362\u5668\u5b9e\u4f8b")))," \u663e\u793a\u4e86\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"StreamTransformer")," \uff0c\u5b83\u4ece\u8f93\u5165\u6d41\u4e2d\u83b7\u53d6\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u5176\u957f\u5ea6\u5c0f\u4e8e\u5b9a\u4e49\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"MAX_LENGTH"),"\uff0c\u5219\u5bf9\u5176\u8fdb\u884c\u53d8\u6362\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49 ",(0,i.kt)("inlineCode",{parentName:"p"},"AbstractStreamConsumer")," \u548c ",(0,i.kt)(m.Z,{url:"/core-datastream/src/main/java/io/activej/datastream/AbstractStreamSupplier.java",mdxType:"Githublink"},(0,i.kt)("inlineCode",{parentName:"p"},"\u62bd\u8c61\u6d41\u4f9b\u5e94\u5546")),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/datastream/src/main/java/TransformerExample.java tag=REGION_1",url:"/examples/core/datastream/src/main/java/TransformerExample.java",tag:"REGION_1"},"private final AbstractStreamConsumer<String> input = new AbstractStreamConsumer<String>() {\n  @Override\n  protected void onEndOfStream() {\n    output.sendEndOfStream();\n  }\n};\n\nprivate final AbstractStreamSupplier<Integer> output = new AbstractStreamSupplier<Integer>() {\n  @Override\n  protected void onResumed() {\n    input.resume(item -> {\n      int len = item.length();\n      if (len < MAX_LENGTH) {\n        output.send(len);\n      }\n    });\n  }\n\n  @Override\n  protected void onSuspended() {\n    input.suspend();\n  }\n};\n")),(0,i.kt)("p",null,"\u73b0\u5728\u6211\u4eec\u5b9a\u4e49 ",(0,i.kt)("inlineCode",{parentName:"p"},"main")," \u65b9\u6cd5\uff0c\u5b83\u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u6570\u636e\u7684\u4f9b\u5e94\u8005\uff0c\u4e00\u4e2a ",(0,i.kt)("inlineCode",{parentName:"p"},"TransformerExample")," \u7684\u5b9e\u4f8b\u548c ",(0,i.kt)(m.Z,{url:"/core-datastream/src/main/java/io/activej/datastream/StreamConsumerToList.java",mdxType:"Githublink"},(0,i.kt)("inlineCode",{parentName:"p"},"StreamConsumerToList"))," \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5b9a\u4e49\u8f6c\u6362\u548c\u8f93\u51fa\u7684\u987a\u5e8f\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/datastream/src/main/java/TransformerExample.java tag=REGION_2",url:"/examples/core/datastream/src/main/java/TransformerExample.java",tag:"REGION_2"},'public static void main(String[] args) {\n  Eventloop eventloop = Eventloop.create().withCurrentThread().withEventloopFatalErrorHandler(rethrow());\n\n  StreamSupplier<String> source = StreamSupplier.of("testdata", "testdata1", "testdata1000");\n  TransformerExample transformer = new TransformerExample();\n  StreamConsumerToList<Integer> consumer = StreamConsumerToList.create();\n\n  source.transformWith(transformer).streamTo(consumer);\n  consumer.getResult().whenResult(v -> System.out.println(v));\n\n  eventloop.run();\n}\n')),(0,i.kt)("p",null,"\u5982\u679c\u4f60\u8fd0\u884c\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u4f60\u4f1a\u6536\u5230\u4ee5\u4e0b\u8f93\u51fa\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"[8, 9]\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(m.Z,{url:"/examples/core/datastream/src/main/java/TransformerExample.java",mdxType:"Githublink"},"\u5728GitHub\u4e0a\u770b\u5230\u5b8c\u6574\u7684\u4f8b\u5b50"))),(0,i.kt)("h3",{id:"\u5185\u7f6e\u6d41\u8282\u70b9"},"\u5185\u7f6e\u6d41\u8282\u70b9"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"#"},(0,i.kt)(m.Z,{url:"/examples/core/datastream/src/main/java/BuiltinNodesExample.java",mdxType:"Githublink"},(0,i.kt)("inlineCode",{parentName:"a"},"BuiltinStreamNodesExample")))," \u5c55\u793a\u4e86\u4e00\u4e9b\u5229\u7528\u5185\u7f6e\u6570\u636e\u6d41\u8282\u70b9\u7684\u7b80\u5355\u4f8b\u5b50\u3002"),(0,i.kt)("p",null,"\u7b2c\u4e00\u4e2a\u662f ",(0,i.kt)(m.Z,{url:"/core-datastream/src/main/java/io/activej/datastream/processor/StreamFilter.java",mdxType:"Githublink"},'\u6d41\u5a92\u4f53\u8fc7\u6ee4\u5668"\u3002')," \u5b83\u5141\u8bb8\u5c06\u4e00\u4e2a\u51fd\u6570\u5e94\u7528\u4e8e\u8f93\u5165\uff0c\u7136\u540e\u5c06\u8be5\u51fd\u6570\u7684\u7ed3\u679c\u6d41\u5411\u76ee\u7684\u5730\u3002 \u5728\u8fd9\u4e2a \u7279\u5b9a\u7684\u4f8b\u5b50\u4e2d ",(0,i.kt)("inlineCode",{parentName:"p"},"StreamFilter")," \u8fc7\u6ee4\u8f93\u5165\u7684\u6570\u5b57\uff0c\u7136\u540e\u6d41\u5411\u6d88\u8d39\u8005\u53ea\u6709\u5947\u6570\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/datastream/src/main/java/BuiltinNodesExample.java tag=REGION_1",url:"/examples/core/datastream/src/main/java/BuiltinNodesExample.java",tag:"REGION_1"},"private static void filter() {\n  StreamSupplier<Integer> supplier = StreamSupplier.of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\n  StreamFilter<Integer, Integer> filter = StreamFilter.create(input -> input % 2 == 1);\n\n  StreamConsumerToList<Integer> consumer = StreamConsumerToList.create();\n\n  supplier.transformWith(filter).streamTo(consumer);\n\n  consumer.getResult().whenResult(v -> System.out.println(v));\n}\n")),(0,i.kt)("p",null,"\u8fd9\u4e2a\u4f8b\u5b50\u7684\u8f93\u51fa\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"[1, 3, 5, 7, 9]"),"\uff0c\u800c\u6d41\u7684\u56fe\u5f62\u76f8\u5f53\u7b80\u5355\uff0c\u770b\u8d77\u6765\u5982\u4e0b\u3002"),(0,i.kt)(s.Z,{chart:"\ngraph TD\n    id1(StreamSuppliers$OfIterator)--\x3eid2(StreamFilter$Input)--\x3eid3([StreamFilter])--\x3eid4(StreamFilter$Output)--\x3eid5(StreamConsumerToList)\n    style id1 stroke:#3578ep,stroke-width:2px\n    style id2 stroke:#fa383e,stroke-width:2px\n    style id3 stroke:#a4a6a8,stroke-width:2px\n    style id4 stroke:#3578ep, stroke-width:2px\n    style id5 stroke:#fa383e, stroke-width:2px\n",mdxType:"Mermaid"}),(0,i.kt)("p",null,"\u53e6\u4e00\u4e2a\u5185\u7f6e\u7684\u6d41\u8282\u70b9\u662f ",(0,i.kt)(m.Z,{url:"/core-datastream/src/main/java/io/activej/datastream/processor/StreamFilter.java",mdxType:"Githublink"},'"StreamFilter::mapper"\u3002')),(0,i.kt)("p",null,"\u5b83\u6839\u636e\u7ed9\u5b9a\u7684\u51fd\u6570\u6539\u53d8\u6bcf\u4e2a\u8f93\u5165\u9879\uff0c\u4f8b\u5982\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/datastream/src/main/java/BuiltinNodesExample.java tag=REGION_3",url:"/examples/core/datastream/src/main/java/BuiltinNodesExample.java",tag:"REGION_3"},'private static void mapper() {\n  //creating a supplier of 10 numbers\n  StreamSupplier<Integer> supplier = StreamSupplier.of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\n  //creating a mapper for the numbers\n  StreamFilter<Integer, String> simpleMap = StreamFilter.mapper(x -> x + " times ten = " + x * 10);\n\n  //creating a consumer which converts received values to list\n  StreamConsumerToList<String> consumer = StreamConsumerToList.create();\n\n  //applying the mapper to supplier and streaming the result to consumer\n  supplier.transformWith(simpleMap).streamTo(consumer);\n\n  //when consumer completes receiving values, the result is printed out\n  consumer.getResult().whenResult(v -> System.out.println(v));\n}\n')),(0,i.kt)("p",null,"\u8fd9\u4e2a\u4f8b\u5b50\u7684\u8f93\u51fa\u662f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"[\n    1\u6b21\u5341=10,\n    2\u6b21\u5341=20,\n    3\u6b21\u5341=30,\n    4\u6b21\u5341=40,\n    5\u6b21\u5341=50,\n    6\u6b21\u5341=60,\n    7\u6b21\u5341=70,\n    8\u6b21\u5341=80,\n    9\u6b21\u5341=90,\n    10\u6b21\u5341=100\n]\n")),(0,i.kt)("p",null,"\u548c\u6d41\u7684\u56fe\u5f62\u770b\u8d77\u6765\u5982\u4e0b\u3002"),(0,i.kt)(s.Z,{chart:"\ngraph TD\n    id1(StreamSuppliers$OfIterator)--\x3eid2(StreamMapper$Input)--\x3eid3([StreamMapper])--\x3eid4(StreamMapper$Output)--\x3eid5(StreamConsumerToList)\n    style id1 stroke:#3578ep,stroke-width:2px\n    style id2 stroke:#fa383e,stroke-width:2px\n    style id3 stroke:#a4a6a8,stroke-width:2px\n    style id4 stroke:#3578ep, stroke-width:2px\n    style id5 stroke:#fa383e, stroke-width:2px\n",mdxType:"Mermaid"}),(0,i.kt)("p",null,"\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u53e6\u4e00\u4e2a\u5185\u7f6e\u8282\u70b9 ",(0,i.kt)(m.Z,{url:"/core-datastream/src/main/java/io/activej/datastream/processor/StreamSplitter.java",mdxType:"Githublink"},'"StreamSplitter"(\u5206\u6d41\u5668)')),(0,i.kt)("p",null,"\u5b83\u662f\u4e00\u4e2a\u6d41\u8f6c\u5316\u5668\uff0c\u6839\u636e\u63d0\u4f9b\u7684\u51fd\u6570\u5206\u914d\u8f93\u5165\u6d41\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5b83 \uff0c\u57283\u4e2a\u6d88\u8d39\u8005\u4e4b\u95f4\u5206\u914d10\u4e2a\u6570\u5b57\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/datastream/src/main/java/BuiltinNodesExample.java tag=REGION_2",url:"/examples/core/datastream/src/main/java/BuiltinNodesExample.java",tag:"REGION_2"},'private static void splitter() {\n  StreamSupplier<Integer> supplier = StreamSupplier.of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\n  ToIntFunction<Object> hashSharder = item -> (item.hashCode() & Integer.MAX_VALUE) % 3;\n  //creating a sharder of three parts for three consumers\n  StreamSplitter<Integer, Integer> sharder = StreamSplitter.create(\n      (item, acceptors) -> acceptors[hashSharder.applyAsInt(item)].accept(item));\n\n  StreamConsumerToList<Integer> first = StreamConsumerToList.create();\n  StreamConsumerToList<Integer> second = StreamConsumerToList.create();\n  StreamConsumerToList<Integer> third = StreamConsumerToList.create();\n\n  sharder.newOutput().streamTo(first);\n  sharder.newOutput().streamTo(second);\n  sharder.newOutput().streamTo(third);\n\n  supplier.streamTo(sharder.getInput());\n\n  first.getResult().whenResult(x -> System.out.println("first: " + x));\n  second.getResult().whenResult(x -> System.out.println("second: " + x));\n  third.getResult().whenResult(x -> System.out.println("third: " + x));\n}\n')),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u5feb\u6377\u65b9\u6cd5 ",(0,i.kt)("inlineCode",{parentName:"p"},"transformWith")," \uff0c\u56e0\u4e3a\u5b83\u53ea\u80fd \uff0c\u7528\u4e8e\u6b63\u597d\u6709\u4e00\u4e2a\u8f93\u5165\u548c\u4e00\u4e2a\u8f93\u51fa\u6d41\u7684\u53d8\u6362\u5668\u3002"))),(0,i.kt)("p",null,"\u8fd9\u4e2a\u4f8b\u5b50\u7684\u8f93\u51fa\u662f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u7b2c\u4e00\u3002[3\uff0c6\uff0c9]\n\u7b2c\u4e8c\uff1a[1\uff0c4\uff0c7\uff0c10]\n\u7b2c\u4e09\uff1a[2\uff0c5\uff0c8]`\u3002\n")),(0,i.kt)("p",null,"\u800c\u6d41\u5411\u56fe\u770b\u8d77\u6765\u5982\u4e0b\u3002"),(0,i.kt)(s.Z,{chart:"\ngraph TD;\n    id7(StreamSuppliers$OfIterator):::blue--\x3eid8(StreamSplitter$Input);\n    id8--\x3eStreamSplitter:::grey;\n    StreamSplitter--\x3eid1(StreamSplitter$Output);\n    StreamSplitter--\x3eid2(StreamSplitter$Output);\n    StreamSplitter--\x3eid3(StreamSplitter$Output);\n    id1--\x3eid4(StreamConsumerToList);\n    id2--\x3eid5(StreamConsumerToList);\n    id3--\x3eid6(StreamConsumerToList);\n",mdxType:"Mermaid"}),(0,i.kt)("p",null,"\u5f53\u4f60\u521b\u5efa ",(0,i.kt)("strong",{parentName:"p"},"StreamSplitter"),"\uff0c\u4f60\u53ef\u4ee5\u5728lambda\u4e2d\u63d0\u4f9b\u4efb\u4f55\u51fd\u6570\u3002 \u5bf9\u4e8e \uff0c\u8981\u521b\u5efa\u4e00\u4e2a\u5c06\u6240\u6709\u8f93\u5165\u6570\u636e\u53d1\u9001\u81f3\u6240\u6709\u6d88\u8d39\u8005\u7684\u8f6c\u5316\u5668\uff0c\u53ea\u9700\u521b\u5efa\u4ee5\u4e0blambda\u8868\u8fbe\u5f0f\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"(item, acceptors) -> {for (StreamDataAcceptor<Integer> acceptor : acceptors) { acceptor.accept(item);}}\n")),(0,i.kt)("p",null,"\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8f93\u51fa\u5c06\u662f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"\u7b2c\u4e00\u7bc7[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\u7b2c\u4e8c\u6b21\uff1a[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\u7b2c\u4e09\u6b21\uff1a[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n")),(0,i.kt)("p",null,"\u6700\u540e\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b ",(0,i.kt)(m.Z,{url:"/core-datastream/src/main/java/io/activej/datastream/processor/StreamUnion.java",mdxType:"Githublink"},'"StreamUnion')," \u5b83\u7684\u4f5c\u7528\u4e0e ",(0,i.kt)("inlineCode",{parentName:"p"},"StreamSplitter")," \u76f8\u53cd\uff0c\u5e76\u5c06\u51e0\u4e2a\u8f93\u5165\u6d41\u7edf\u4e00\u4e3a\u4e00\u4e2a\u8f93\u51fa\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/datastream/src/main/java/BuiltinNodesExample.java tag=REGION_4",url:"/examples/core/datastream/src/main/java/BuiltinNodesExample.java",tag:"REGION_4"},"private static void union() {\n  //creating three suppliers of numbers\n  StreamSupplier<Integer> source0 = StreamSupplier.of(1, 2);\n  StreamSupplier<Integer> source1 = StreamSupplier.of();\n  StreamSupplier<Integer> source2 = StreamSupplier.of(3, 4, 5);\n\n  //creating a unifying transformer\n  StreamUnion<Integer> streamUnion = StreamUnion.create();\n\n  //creating a consumer which converts received values to list\n  StreamConsumerToList<Integer> consumer = StreamConsumerToList.create();\n\n  //stream the sources into new inputs of the unifier\n  source0.streamTo(streamUnion.newInput());\n  source1.streamTo(streamUnion.newInput());\n  source2.streamTo(streamUnion.newInput());\n\n  //and stream the output of the unifier into the consumer\n  streamUnion.getOutput().streamTo(consumer);\n\n  //when consumer completes receiving values, the result is printed out\n  consumer.getResult().whenResult(v -> System.out.println(v));\n}\n")),(0,i.kt)("p",null,"\u8fd9\u4e2a\u4f8b\u5b50\u7684\u8f93\u51fa\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"[1, 2, 3, 4, 5]")," \uff0c\u6d41\u7684\u56fe\u5f62\u770b\u8d77\u6765\u5982\u4e0b\u3002"),(0,i.kt)(s.Z,{chart:"\ngraph TD;\n    id1(StreamSuppliers$OfIterator)--\x3eid2(StreamUnion$Input);\n    id3(StreamSuppliers$OfIterator)--\x3eid4(StreamUnion$Input);\n    id5(StreamSuppliers$OfIterator)--\x3eid6(StreamUnion$Input);\n    id2--\x3eStreamUnion;\n    id4--\x3eStreamUnion;\n    id6--\x3eStreamUnion;\n    StreamUnion--\x3eStreamUnion$Output;\n    StreamUnion$Output--\x3eStreamConsumerToList;\n",mdxType:"Mermaid"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(m.Z,{url:"/examples/core/datastream/src/main/java/BuiltinNodesExample.java",mdxType:"Githublink"},"\u5728GitHub\u4e0a\u770b\u5230\u5b8c\u6574\u7684\u4f8b\u5b50"))))}v.isMDXComponent=!0},11748:function(e,t,a){var r={"./locale":89234,"./locale.js":89234};function n(e){var t=i(e);return a(t)}function i(e){if(!a.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}n.keys=function(){return Object.keys(r)},n.resolve=i,e.exports=n,n.id=11748}}]);