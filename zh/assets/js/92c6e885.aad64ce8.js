"use strict";(self.webpackChunkactivejdocs=self.webpackChunkactivejdocs||[]).push([[1068],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return u}});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var c=n.createContext({}),p=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(a),u=i,f=d["".concat(c,".").concat(u)]||d[u]||m[u]||r;return a?n.createElement(f,o(o({ref:t},s),{},{components:a})):n.createElement(f,o({ref:t},s))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},91623:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},assets:function(){return s},toc:function(){return m},default:function(){return u}});var n=a(87462),i=a(63366),r=(a(67294),a(3905)),o=["components"],l={title:"ActiveJ 5.0 - New major release",hide_table_of_contents:!1},c=void 0,p={permalink:"/zh/blog/2021/10/29/v5.0",source:"@site/blog/2021-10-29-v5.0.md",title:"ActiveJ 5.0 - New major release",description:"ActiveJ v5.0 was released Oct 29,",date:"2021-10-29T00:00:00.000Z",formattedDate:"2021\u5e7410\u670829\u65e5",tags:[],readingTime:1.835,truncated:!1,authors:[],nextItem:{title:"ActiveJ 4.3 - \u591a\u4e2a\u6a21\u5757\u7684\u5c0f\u6539\u8fdb",permalink:"/zh/blog/2021/05/28/v4.3"}},s={authorsImageUrls:[]},m=[],d={toc:m};function u(e){var t=e.components,a=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"ActiveJ v5.0 was released Oct 29,\n2021 (",(0,r.kt)("a",{parentName:"p",href:"https://mvnrepository.com/artifact/io.activej/activej/5.0"},"see on Maven"),"). This release includes\nmajor changes in ",(0,r.kt)("a",{parentName:"p",href:"/inject"},"ActiveJ Inject"),", ",(0,r.kt)("a",{parentName:"p",href:"/codegen"},"ActiveJ Codegen"),", ",(0,r.kt)("a",{parentName:"p",href:"/serializer"},"ActiveJ Serializer"),"\n",(0,r.kt)("a",{parentName:"p",href:"/async-io/promise"},"promises API"),". The release also introduced improved type scanning facility and\noverall minor improvements in other components."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/inject"},"ActiveJ Inject"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Refactored and simplified inner components to speed up dependency injection and provide better support for binding\n",(0,r.kt)("a",{parentName:"li",href:"/specializer"},"specialization")),(0,r.kt)("li",{parentName:"ul"},"Simplified type resolution in dependency injection"),(0,r.kt)("li",{parentName:"ul"},"Added the ability to transform imported and exported bindings using patterns (see ",(0,r.kt)("a",{parentName:"li",href:"/inject/binding-transformation"},"example"),")"),(0,r.kt)("li",{parentName:"ul"},"Replaced ",(0,r.kt)("inlineCode",{parentName:"li"},"@Optional")," annotation with an explicit ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/activej/activej/blob/master/core-inject/src/main/java/io/activej/inject/binding/OptionalDependency.java"},"OptionalDependency"),"\nclass"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/codegen"},"ActiveJ Codegen"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Improved ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/activej/activej/blob/v5.0/core-codegen/src/main/java/io/activej/codegen/ClassBuilder.java"},"ClassBuilder")," and ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/activej/activej/blob/v5.0-beta2/core-codegen/src/main/java/io/activej/codegen/DefiningClassLoader.java"},"DefiningClassLoader")," classes"),(0,r.kt)("li",{parentName:"ul"},"Class generation may now be 100% lazy"),(0,r.kt)("li",{parentName:"ul"},"Added in-memory ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/activej/activej/blob/v5.0/core-codegen/src/main/java/io/activej/codegen/ClassBuilder.java"},"ClassBuilder")," caches"),(0,r.kt)("li",{parentName:"ul"},"Added the ability to use ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/activej/activej/blob/v5.0/core-codegen/src/main/java/io/activej/codegen/BytecodeStorage.java"},"BytecodeStorage")," as a persistent cache for generated bytecode"),(0,r.kt)("li",{parentName:"ul"},"Added the ability to call super methods as well as protected methods"),(0,r.kt)("li",{parentName:"ul"},"Improved built-in expressions for array/collection/map iteration"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/serializer"},"ActiveJ Serializer"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Added the ability to specify serializer annotations directly on type use (see ",(0,r.kt)("a",{parentName:"li",href:"/serializer/examples#path-based-serialization"},"example"),")"),(0,r.kt)("li",{parentName:"ul"},"Automatic class member ordering is now supported within the same JVM"),(0,r.kt)("li",{parentName:"ul"},"Added support for serializer annotation aliases"),(0,r.kt)("li",{parentName:"ul"},"Improved array serialization as well as serialization of booleans"),(0,r.kt)("li",{parentName:"ul"},"Refactored class hierarchy of collection serializers. "),(0,r.kt)("li",{parentName:"ul"},"Abstract collection serializers now support builder pattern"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/async-io/promise"},"Promise"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Greatly improved exception handling"),(0,r.kt)("li",{parentName:"ul"},"Renamed promise chaining methods ",(0,r.kt)("inlineCode",{parentName:"li"},"thenEx")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"mapEx")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"then")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"map")),(0,r.kt)("li",{parentName:"ul"},"Added new conditional chaining methods as well as dedicated null-handling chaining methods "),(0,r.kt)("li",{parentName:"ul"},'All the changing methods now take "throwing" functions. If a checked exception is thrown in a chaining function,\nthe whole promise is completed exceptionally'))),(0,r.kt)("li",{parentName:"ul"},"Miscellaneous improvements",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Removed ",(0,r.kt)("inlineCode",{parentName:"li"},"codec")," module. Components that require JSON marshalling now internally use the\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/ngs-doo/dsl-json"},"DSL-JSON")," library  "),(0,r.kt)("li",{parentName:"ul"},"Added new ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/activej/activej/tree/v5.0/util-types"},"types")," module which contains various reflection and type utilities, including advanced type scanner"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/activej/activej/tree/v5.0-beta1/util-common"},"Common")," module has been massively refactored to make common functions and components more consistent"),(0,r.kt)("li",{parentName:"ul"},"Restructured asynchronous exceptions"),(0,r.kt)("li",{parentName:"ul"},"Unchecked exception handling can now be precisely configured using a thread-scoped or global\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/activej/activej/blob/master/util-common/src/main/java/io/activej/common/exception/FatalErrorHandler.java"},"FatalErrorHandler facility")," "),(0,r.kt)("li",{parentName:"ul"},"Made ActiveJ compatible with Java 17"),(0,r.kt)("li",{parentName:"ul"},"Added various ",(0,r.kt)("inlineCode",{parentName:"li"},"DiscoveryService")," interfaces for node discovery within server cluster (",(0,r.kt)("a",{parentName:"li",href:"/rpc"},"RPC"),", ",(0,r.kt)("a",{parentName:"li",href:"/fs"},"FS"),")"),(0,r.kt)("li",{parentName:"ul"},"Removed ",(0,r.kt)("inlineCode",{parentName:"li"},"AsyncServletDecorator")," facility"),(0,r.kt)("li",{parentName:"ul"},"Removed ",(0,r.kt)("inlineCode",{parentName:"li"},"StreamCodecRegistry")," facility"),(0,r.kt)("li",{parentName:"ul"},"Multiple small improvements and fixes")))))}u.isMDXComponent=!0}}]);