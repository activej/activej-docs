(self.webpackChunkactivejdocs=self.webpackChunkactivejdocs||[]).push([[5220],{3905:function(e,t,r){"use strict";r.d(t,{kt:function(){return p}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(r),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||i;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function p(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},77815:function(e,t,r){"use strict";var n=r(95318).default;t.Z=void 0;n(r(67294));var a=n(r(39962)),i=function(e){var t=e.name,r=(0,a.default)().siteConfig;if(!t)throw new Error("Variable name is required");if(void 0===r.customFields[t])throw new Error("Variable "+t+" not exist");return r.customFields[t]};t.Z=i},87603:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},metadata:function(){return l},toc:function(){return d},default:function(){return p}});var n=r(22122),a=r(19756),i=(r(67294),r(3905)),o=r(77815),s=["components"],c={},l={unversionedId:"codegen/overview",id:"codegen/overview",isDocsHomePage:!1,title:"Overview",description:"ActiveJ Codegen is an efficient Java code generator with streamlined and simple API. It is built on top of ObjectWeb ASM and has zero-overhead performance. ActiveJ Codegen is widely utilised at ActiveJ Serializer, making it the fastest JVM-based serializer in the world.",source:"@site/docs/codegen/overview.mdx",sourceDirName:"codegen",slug:"/codegen/overview",permalink:"/docs/codegen/overview",version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Examples",permalink:"/docs/inject/examples"},next:{title:"Examples",permalink:"/docs/codegen/examples"}},d=[{value:"Why ActiveJ Codegen?",id:"why-activej-codegen",children:[]},{value:"Use case",id:"use-case",children:[]},{value:"Add ActiveJ Codegen to your project",id:"add-activej-codegen-to-your-project",children:[]}],u={toc:d};function p(e){var t=e.components,r=(0,a.default)(e,s);return(0,i.kt)("wrapper",(0,n.default)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"ActiveJ Codegen is an efficient Java code generator with streamlined and simple API. It is built on top of ObjectWeb ASM and has zero-overhead performance. ActiveJ Codegen is widely utilised at ",(0,i.kt)("a",{parentName:"p",href:"/docs/serializer/overview"},"ActiveJ Serializer"),", making it the fastest JVM-based serializer in the world.\nActiveJ Codegen is one of the ActiveJ technologies, but it has minimal third-party dependencies and can be used as a stand-alone component."),(0,i.kt)("h2",{id:"why-activej-codegen"},"Why ActiveJ Codegen?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Utilizes powerful ASM library for code generation and manipulation"),(0,i.kt)("li",{parentName:"ul"},"Provides concise Expressions API that provides Lisp-like DSL for describing new classes"),(0,i.kt)("li",{parentName:"ul"},"Supports caching of generated classes"),(0,i.kt)("li",{parentName:"ul"},"Suitable for dynamic class generation based on runtime parameters (e.g. query processing)"),(0,i.kt)("li",{parentName:"ul"},"Supports relational algebra operations for individual items: aggregate functions, predicates, ordering, group-by, etc."),(0,i.kt)("li",{parentName:"ul"},"Features automatic type inference"),(0,i.kt)("li",{parentName:"ul"},"Zero-overhead performance"),(0,i.kt)("li",{parentName:"ul"},"Support for Records (heterogeneous data containers)")),(0,i.kt)("h2",{id:"use-case"},"Use case"),(0,i.kt)("p",null,"ActiveJ Codegen can be used for code generation in different scenarios. For example, POJO containers that store the results of processing user data, predicates that filter data placed in database and so on."),(0,i.kt)("p",null,"Imagine that a service needs to find all adult users in its system. It produces such query to the database:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT id, name, age FROM users WHERE age >= 18;\n")),(0,i.kt)("p",null,"First, it is necessary to build a data container class (POJO):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"class User {\n      long id;\n      String name;\n      int age;\n}\n")),(0,i.kt)("p",null,"The process of a new class generation is simple and minimalistic. Use the builder pattern to produce the fields and methods of a new class:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"Class<?> userClass = ClassBuilder.create(Object.class)\n    .withField(\u201cid\u201d, long.class)\n    .withField(\u201cname\u201d, String.class)\n    .withField(\u201cage\u201d, int.class)\n    .build()\n")),(0,i.kt)("p",null,"Now let\u2019s move on to the predicate generation:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"class UserPredicate implements Predicate<User> {\n    boolean test (User user) {\n        return user.age >= 18;\n    }\n}\n")),(0,i.kt)("p",null,"Methods production is a little bit trickier. ActiveJ Codegen provides special expression DSL for method body generation:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"Class<Predicate> filter = ClassBuilder.create(Predicate.class)\n    .withMethod(\u201ctest\u201d, boolean.class, userClass,\n                cmpGe(property(arg(0), \u201cage\u201d), value(18)))\n    .build()\n")),(0,i.kt)("h2",{id:"add-activej-codegen-to-your-project"},"Add ActiveJ Codegen to your project"),(0,i.kt)("p",null,"You can add ActiveJ Inject to your project by importing its Maven repository.\nThese docs cover the most recent release of ActiveJ Inject ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(o.Z,{style:{display:"inline"},name:"currentVersion",mdxType:"Variable"}))," (see on ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/activej/activej/tree/master/core-codegen"},"Github")," or ",(0,i.kt)("a",{parentName:"p",href:"https://mvnrepository.com/artifact/io.activej/activej-codegen"},"Maven"),")."))}p.isMDXComponent=!0}}]);