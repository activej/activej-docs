(self.webpackChunkactivejdocs=self.webpackChunkactivejdocs||[]).push([[8025],{3905:function(e,r,t){"use strict";t.r(r),t.d(r,{MDXContext:function(){return l},MDXProvider:function(){return d},mdx:function(){return h},useMDXComponents:function(){return u},withMDXComponents:function(){return p}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(){return(i=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),p=function(e){return function(r){var t=u(r.components);return n.createElement(e,i({},r,{components:t}))}},u=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},d=function(e){var r=u(e.components);return n.createElement(l.Provider,{value:r},e.children)},m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},v=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(t),d=o,v=p["".concat(a,".").concat(d)]||p[d]||m[d]||i;return t?n.createElement(v,c(c({ref:r},l),{},{components:t})):n.createElement(v,c({ref:r},l))}));function h(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=v;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=t[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}v.displayName="MDXCreateElement"},77815:function(e,r,t){"use strict";var n=t(95318).default;r.Z=void 0;n(t(67294));var o=n(t(39962)),i=function(e){var r=e.name,t=(0,o.default)().siteConfig;if(!r)throw new Error("Variable name is required");if(void 0===t.customFields[r])throw new Error("Variable "+r+" not exist");return t.customFields[r]};r.Z=i},72941:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var n=t(22122),o=t(19756),i=(t(67294),t(3905)),a=t(77815),c=["components"],s={title:"ActiveJ RPC | Lightning-fast binary protocol for high-load architecture",keywords:"java,java library,tutorial,guide,memcached,rpc,web application,high-load,microservices",description:"ActiveJ RPC is a lightning-fast binary protocol for high-load microservices architecture"},l={unversionedId:"rpc/overview",id:"rpc/overview",isDocsHomePage:!1,title:"Overview",description:"ActiveJ RPC is a lightning-fast binary protocol for high-load microservices architecture",source:"@site/docs/rpc/overview.mdx",sourceDirName:"rpc",slug:"/rpc/overview",permalink:"/docs/rpc/overview",version:"current",frontMatter:{title:"ActiveJ RPC | Lightning-fast binary protocol for high-load architecture",keywords:"java,java library,tutorial,guide,memcached,rpc,web application,high-load,microservices",description:"ActiveJ RPC is a lightning-fast binary protocol for high-load microservices architecture"},sidebar:"docs",previous:{title:"Examples",permalink:"/docs/specializer/examples"},next:{title:"Basic Examples",permalink:"/docs/rpc/basic-examples"}},p=[{value:"Why ActiveJ RPC?",id:"why-activej-rpc",children:[]},{value:"Asynchronous binary RPC protocol with extensive cloud strategies",id:"asynchronous-binary-rpc-protocol-with-extensive-cloud-strategies",children:[]},{value:"Add ActiveJ RPC to your project",id:"add-activej-rpc-to-your-project",children:[]}],u={toc:p};function d(e){var r=e.components,t=(0,o.default)(e,c);return(0,i.mdx)("wrapper",(0,n.default)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,i.mdx)("p",null,"ActiveJ RPC is a lightweight and convenient Java library for developing ",(0,i.mdx)("strong",{parentName:"p"},"high-load distributed applications")," and Memcached-like solutions. It introduces a completely ",(0,i.mdx)("strong",{parentName:"p"},"alternative approach to microservices implementation")," and ",(0,i.mdx)("strong",{parentName:"p"},"overcomes the overheads")," of utilizing HTTP protocol with JSON or XML encoding. ActiveJ RPC is powered by world's fastest JVM serializer ActiveJ Serializer, runs on TCP, supports pipelined requests and has a custom ",(0,i.mdx)("strong",{parentName:"p"},"high-performance binary streaming protocol"),". Along with that, ActiveJ RPC utilizes Datastream module for asynchronous data processing and back pressure control. It also features built-in commonly used RPC ",(0,i.mdx)("strong",{parentName:"p"},"strategies and high fault tolerance"),"."),(0,i.mdx)("h2",{id:"why-activej-rpc"},"Why ActiveJ RPC?"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"Outstanding performance of up to ~15M requests per second on a single CPU core"),(0,i.mdx)("li",{parentName:"ul"},"Simple API for defining client and server message handlers"),(0,i.mdx)("li",{parentName:"ul"},"Wide range of RPC strategies (first available, round-robin, rendezvous hashing, etc.) that can be simply combined"),(0,i.mdx)("li",{parentName:"ul"},"Custom high-performance streaming protocol"),(0,i.mdx)("li",{parentName:"ul"},"Utilizes ActiveJ's ",(0,i.mdx)("strong",{parentName:"li"},"Datastream, Net")," and ",(0,i.mdx)("strong",{parentName:"li"},"Serializer")," modules to achieve top performance"),(0,i.mdx)("li",{parentName:"ul"},"Fault tolerance with re-connections to fallback and replica servers"),(0,i.mdx)("li",{parentName:"ul"},"Native support for message pipelining"),(0,i.mdx)("li",{parentName:"ul"},"Ideal for near-real time servers with application-specific business logic"),(0,i.mdx)("li",{parentName:"ul"},"Tested in a high-load production environment")),(0,i.mdx)("h2",{id:"asynchronous-binary-rpc-protocol-with-extensive-cloud-strategies"},"Asynchronous binary RPC protocol with extensive cloud strategies"),(0,i.mdx)("p",null,"ActiveJ RPC features highly optimized flexible server and client implementation along with predefined cloud strategies. With these technologies you can conveniently create even ",(0,i.mdx)("strong",{parentName:"p"},"complex scalable solutions")," like ",(0,i.mdx)("strong",{parentName:"p"},"high-performance microservices or Memcached-like")," servers."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'RpcServer rpcServer(Eventloop eventloop) {\n    return RpcServer.create(eventloop)\n        .withMessageTypes(String.class)\n        .withHandler(String.class, String.class,\n                request -> Promise.of("Hello " + request))\n        .withListenPort(SERVICE_PORT);\n}\n\nRpcClient rpcClient(Eventloop eventloop) {\n    return RpcClient.create(eventloop)\n        .withMessageTypes(String.class)\n        .withStrategy(server(new InetSocketAddress(SERVICE_PORT)));\n}\n')),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'rpcClient.sendRequest("World")\n    .whenResult(response -> System.out.println(response)); // prints "Hello World"\n')),(0,i.mdx)("h2",{id:"add-activej-rpc-to-your-project"},"Add ActiveJ RPC to your project"),(0,i.mdx)("p",null,"You can add ActiveJ RPC to your project by importing its Maven repository.\nThese docs cover the most recent release of ActiveJ RPC ",(0,i.mdx)("strong",{parentName:"p"},(0,i.mdx)(a.Z,{name:"currentVersion",mdxType:"Variable"}))," (see on ",(0,i.mdx)("a",{parentName:"p",href:"https://github.com/activej/activej/tree/master/core-rpc"},"Github")," or ",(0,i.mdx)("a",{parentName:"p",href:"https://mvnrepository.com/artifact/io.activej/activej-rpc"},"Maven"),")."))}d.isMDXComponent=!0}}]);