(self.webpackChunkactivejdocs=self.webpackChunkactivejdocs||[]).push([[941],{3905:function(e,t,a){"use strict";a.r(t),a.d(t,{MDXContext:function(){return d},MDXProvider:function(){return m},mdx:function(){return h},useMDXComponents:function(){return p},withMDXComponents:function(){return c}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),c=function(e){return function(t){var a=p(t.components);return n.createElement(e,i({},t,{components:a}))}},p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(a),m=r,v=c["".concat(o,".").concat(m)]||c[m]||u[m]||i;return a?n.createElement(v,l(l({ref:t},d),{},{components:a})):n.createElement(v,l({ref:t},d))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=v;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}v.displayName="MDXCreateElement"},77618:function(e,t,a){"use strict";var n=a(95318).default;t.Z=void 0;var r=n(a(67294)),i=n(a(39962)),o=function(e){var t=e.url,a=e.text,n=e.isInline,o=void 0===n||n,l=e.children,s=(0,i.default)().siteConfig;return r.default.createElement("a",{style:o?{}:{display:"block",marginBottom:"16px"},href:s.customFields.githubUrl+"/"+s.customFields.githubBranch+t,target:"_blank"},a||l)};t.Z=o},77815:function(e,t,a){"use strict";var n=a(95318).default;t.Z=void 0;n(a(67294));var r=n(a(39962)),i=function(e){var t=e.name,a=(0,r.default)().siteConfig;if(!t)throw new Error("Variable name is required");if(void 0===a.customFields[t])throw new Error("Variable "+t+" not exist");return a.customFields[t]};t.Z=i},58085:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return d},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var n=a(22122),r=a(19756),i=(a(67294),a(3905)),o=a(77618),l=a(77815),s=["components"],d={title:"ActiveJ | Form Validation Using HTTP Decoder",keywords:["java","java for beginners","java framework","guide","tutorial","web application","server","servlet","spring","spring alternative","netty alternative","jetty alternative","decoder","mvc","form validation","async"],description:"Create an async Java servlet that can process validation form using ActiveJ components."},c={unversionedId:"tutorials/http-decoder",id:"tutorials/http-decoder",isDocsHomePage:!1,title:"Form Validation Using HTTP Decoder",description:"Create an async Java servlet that can process validation form using ActiveJ components.",source:"@site/docs/tutorials/http-decoder.mdx",sourceDirName:"tutorials",slug:"/tutorials/http-decoder",permalink:"/tutorials/http-decoder",version:"current",frontMatter:{title:"ActiveJ | Form Validation Using HTTP Decoder",keywords:["java","java for beginners","java framework","guide","tutorial","web application","server","servlet","spring","spring alternative","netty alternative","jetty alternative","decoder","mvc","form validation","async"],description:"Create an async Java servlet that can process validation form using ActiveJ components."},sidebar:"tutorials",previous:{title:"Template engine integration",permalink:"/tutorials/template-engine-integration"},next:{title:"Authorization and Session Management",permalink:"/tutorials/authorization-tutorial"}},p=[{value:"Creating <code>HttpDecoderExample</code> Class",id:"creating-httpdecoderexample-class",children:[]},{value:"Running the application",id:"running-the-application",children:[]}],m={toc:p};function u(e){var t=e.components,a=(0,r.default)(e,s);return(0,i.mdx)("wrapper",(0,n.default)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.mdx)("p",null,"In this example we will create an async servlet that adds contacts to a list, parses requests and processes form\nvalidation with the help of ",(0,i.mdx)("inlineCode",{parentName:"p"},"Decoder"),". Consider this example as a concise representation of the MVC pattern:"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"To model a ",(0,i.mdx)("inlineCode",{parentName:"li"},"Contact")," representation, we will create a plain Java class with fields (name, age, address), constructor, and accessors to the fields."),(0,i.mdx)("li",{parentName:"ul"},"To simplify the example, we will use an ",(0,i.mdx)("inlineCode",{parentName:"li"},"ArrayList")," to store the ",(0,i.mdx)("inlineCode",{parentName:"li"},"Contact")," objects. ",(0,i.mdx)("inlineCode",{parentName:"li"},"ContactDAO")," interface and its implementation are used for this purpose."),(0,i.mdx)("li",{parentName:"ul"},"To build a view we will use a single HTML file, compiled with the help of the Mustache template engine."),(0,i.mdx)("li",{parentName:"ul"},"An ",(0,i.mdx)("inlineCode",{parentName:"li"},"AsyncServlet")," will be used as a controller. We will also add ",(0,i.mdx)("inlineCode",{parentName:"li"},"RoutingServlet")," for routing a concrete request to a particular endpoint."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("strong",{parentName:"li"},"Decoder")," provides you with tools for parsing requests.")),(0,i.mdx)(o.Z,{isInline:!1,text:"See full example on GitHub",url:"/examples/tutorials/decoder/src/main/java",mdxType:"Githublink"}),(0,i.mdx)("p",null,"Here we will consider only ",(0,i.mdx)("inlineCode",{parentName:"p"},"HttpDecoderExample")," class with ",(0,i.mdx)("inlineCode",{parentName:"p"},"AsyncServlet")," as it contains ActiveJ-specific features."),(0,i.mdx)("h2",{id:"creating-httpdecoderexample-class"},"Creating ",(0,i.mdx)("inlineCode",{parentName:"h2"},"HttpDecoderExample")," Class"),(0,i.mdx)("p",null,"Let's create ",(0,i.mdx)("inlineCode",{parentName:"p"},"HttpDecoderExample")," class which extends ",(0,i.mdx)("inlineCode",{parentName:"p"},"HttpServerLauncher"),". By extending ",(0,i.mdx)("inlineCode",{parentName:"p"},"HttpServerLauncher")," we will take care\nof the server's lifecycle and service management. Next, we provide two custom parsers based on HTTP ",(0,i.mdx)(o.Z,{url:"/core-http/src/main/java/io/activej/http/decoder/Decoder.java",mdxType:"Githublink"},(0,i.mdx)("inlineCode",{parentName:"p"},"Decoder")),"- ",(0,i.mdx)("inlineCode",{parentName:"p"},"ADDRESS_DECODER")," and ",(0,i.mdx)("inlineCode",{parentName:"p"},"CONTACT_DECODER")," - which will be used for validation."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/tutorials/decoder/src/main/java/HttpDecoderExample.java tag=REGION_1",url:"/examples/tutorials/decoder/src/main/java/HttpDecoderExample.java",tag:"REGION_1"},'public final class HttpDecoderExample extends HttpServerLauncher {\n  private static final String SEPARATOR = "-";\n\n  private static final Decoder<Address> ADDRESS_DECODER = Decoder.of(Address::new,\n      ofPost("title", "")\n          .validate(param -> !param.isEmpty(), "Title cannot be empty")\n  );\n\n  private static final Decoder<Contact> CONTACT_DECODER = Decoder.of(Contact::new,\n      ofPost("name")\n          .validate(name -> !name.isEmpty(), "Name cannot be empty"),\n      ofPost("age")\n          .map(Integer::valueOf, "Cannot decode age")\n          .validate(age -> age >= 18, "Age must not be less than 18"),\n      ADDRESS_DECODER.withId("contact-address")\n  );\n')),(0,i.mdx)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,i.mdx)("h5",{parentName:"div"},(0,i.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,i.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.mdx)("div",{parentName:"div",className:"admonition-content"},(0,i.mdx)("p",{parentName:"div"},"If you want to learn more about template engines integration, check out ",(0,i.mdx)("a",{parentName:"p",href:"/tutorials/template-engine-integration"},"this example")))),(0,i.mdx)("p",null,"Also, we need to create ",(0,i.mdx)("em",{parentName:"p"},"applyTemplate(Mustache mustache, Map<String, Object> scopes)")," method to fill the provided\nMustache template with the given data:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/tutorials/decoder/src/main/java/HttpDecoderExample.java tag=REGION_5",url:"/examples/tutorials/decoder/src/main/java/HttpDecoderExample.java",tag:"REGION_5"},"private static ByteBuf applyTemplate(Mustache mustache, Map<String, Object> scopes) {\n  ByteBufWriter writer = new ByteBufWriter();\n  mustache.execute(writer, scopes);\n  return writer.getBuf();\n}\n")),(0,i.mdx)("p",null,"Next, let's provide a ",(0,i.mdx)("strong",{parentName:"p"},"ContactDAOImpl")," factory method:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/tutorials/decoder/src/main/java/HttpDecoderExample.java tag=REGION_6",url:"/examples/tutorials/decoder/src/main/java/HttpDecoderExample.java",tag:"REGION_6"},"@Provides\nContactDAO dao() {\n  return new ContactDAOImpl();\n}\n")),(0,i.mdx)("p",null,"Now we have everything needed to create ",(0,i.mdx)("inlineCode",{parentName:"p"},"AsyncServlet")," to handle requests:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/tutorials/decoder/src/main/java/HttpDecoderExample.java tag=REGION_2",url:"/examples/tutorials/decoder/src/main/java/HttpDecoderExample.java",tag:"REGION_2"},'@Provides\nAsyncServlet mainServlet(ContactDAO contactDAO) {\n  Mustache contactListView = new DefaultMustacheFactory().compile("static/contactList.html");\n  return RoutingServlet.create()\n      .map("/", request ->\n          HttpResponse.ok200()\n              .withBody(applyTemplate(contactListView, map("contacts", contactDAO.list()))))\n      .map(POST, "/add", AsyncServletDecorator.loadBody()\n          .serve(request -> {\n            //[START REGION_3]\n            Either<Contact, DecodeErrors> decodedUser = CONTACT_DECODER.decode(request);\n            //[END REGION_3]\n            if (decodedUser.isLeft()) {\n              contactDAO.add(decodedUser.getLeft());\n            }\n            Map<String, Object> scopes = map("contacts", contactDAO.list());\n            if (decodedUser.isRight()) {\n              scopes.put("errors", decodedUser.getRight().toMap(SEPARATOR));\n            }\n            return HttpResponse.ok200()\n                .withBody(applyTemplate(contactListView, scopes));\n          }));\n}\n')),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"Here we provide an ",(0,i.mdx)("inlineCode",{parentName:"li"},"AsyncServlet"),", which receives ",(0,i.mdx)("inlineCode",{parentName:"li"},"HttpRequests")," from clients, creates ",(0,i.mdx)("inlineCode",{parentName:"li"},"HttpResponses")," depending on route path and sends it."),(0,i.mdx)("li",{parentName:"ul"},"Inside the ",(0,i.mdx)("inlineCode",{parentName:"li"},"RoutingServlet")," two route paths are defined. The first one matches requests to the root route ",(0,i.mdx)("inlineCode",{parentName:"li"},'"/"')," -\nit simply displays a contact list.\nThe second one, ",(0,i.mdx)("inlineCode",{parentName:"li"},'"/add"')," - is an HTTP ",(0,i.mdx)("inlineCode",{parentName:"li"},"POST")," method that adds or declines adding new users. We will process this request parsing with the\nhelp of the aforementioned HTTP ",(0,i.mdx)("inlineCode",{parentName:"li"},"Decoder")," by using ",(0,i.mdx)("inlineCode",{parentName:"li"},"decode(request)")," method:")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/tutorials/decoder/src/main/java/HttpDecoderExample.java tag=REGION_3",url:"/examples/tutorials/decoder/src/main/java/HttpDecoderExample.java",tag:"REGION_3"},"Either<Contact, DecodeErrors> decodedUser = CONTACT_DECODER.decode(request);\n")),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("strong",{parentName:"li"},"Either")," represents a value of two possible data types (",(0,i.mdx)("inlineCode",{parentName:"li"},"Contact"),", ",(0,i.mdx)("inlineCode",{parentName:"li"},"DecodeErrors"),").\n",(0,i.mdx)("strong",{parentName:"li"},"Either")," is either ",(0,i.mdx)("strong",{parentName:"li"},"Left"),"(",(0,i.mdx)("inlineCode",{parentName:"li"},"Contact"),") or ",(0,i.mdx)("strong",{parentName:"li"},"Right"),"(",(0,i.mdx)("strong",{parentName:"li"},"DecodeErrors"),").\nIn order to determine whether a parse was successful or not, we check it's value by using the ",(0,i.mdx)("inlineCode",{parentName:"li"},"isLeft()")," and ",(0,i.mdx)("inlineCode",{parentName:"li"},"isRight()")," methods.")),(0,i.mdx)("p",null,"Finally, write down the ",(0,i.mdx)("inlineCode",{parentName:"p"},"main()")," method which will launch our application:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/tutorials/decoder/src/main/java/HttpDecoderExample.java tag=REGION_4",url:"/examples/tutorials/decoder/src/main/java/HttpDecoderExample.java",tag:"REGION_4"},"public static void main(String[] args) throws Exception {\n  Launcher launcher = new HttpDecoderExample();\n  launcher.launch(args);\n}\n")),(0,i.mdx)("h2",{id:"running-the-application"},"Running the application"),(0,i.mdx)("p",null,"If you want to run the example, you need to ",(0,i.mdx)("a",{parentName:"p",href:"https://github.com/activej/activej"},"clone ActiveJ")," from GitHub and\nimport it as a Maven project. Check out branch ",(0,i.mdx)("strong",{parentName:"p"},(0,i.mdx)(l.Z,{name:"currentVersion",mdxType:"Variable"})),". Before running the example, build the project (",(0,i.mdx)("strong",{parentName:"p"},"Ctrl + F9")," for IntelliJ IDEA)."),(0,i.mdx)("p",null,"Then open ",(0,i.mdx)("inlineCode",{parentName:"p"},"HttpDecoderExample")," class, which is located at ",(0,i.mdx)("inlineCode",{parentName:"p"},"activej/examples/tutorials/decoder")," and run its ",(0,i.mdx)("inlineCode",{parentName:"p"},"main()")," method. Open your favourite browser and go to ",(0,i.mdx)("a",{parentName:"p",href:"http://localhost:8080"},"localhost:8080")))}u.isMDXComponent=!0}}]);