"use strict";(self.webpackChunkactivejdocs=self.webpackChunkactivejdocs||[]).push([[2935],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=s(t),m=i,g=c["".concat(p,".").concat(m)]||c[m]||u[m]||r;return t?a.createElement(g,l(l({ref:n},d),{},{components:t})):a.createElement(g,l({ref:n},d))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,l=new Array(r);l[0]=c;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},77618:function(e,n,t){var a=t(67294),i=t(39962);n.Z=function(e){var n=e.url,t=e.text,r=e.isInline,l=void 0===r||r,o=e.children,p=(0,i.Z)().siteConfig,s=n.startsWith("/examples")?p.customFields.githubExamplesBranch:p.customFields.githubBranch;return a.createElement("a",{style:l?{}:{display:"block",marginBottom:"16px"},href:p.customFields.githubUrl+"/"+s+n,target:"_blank"},t||o)}},27059:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return u},default:function(){return m}});var a=t(87462),i=t(63366),r=(t(67294),t(3905)),l=t(77618),o=["components"],p={sidebar_label:"Duplicate bindings"},s="Resolving duplicate bindings",d={unversionedId:"inject/duplicate-bindings",id:"inject/duplicate-bindings",isDocsHomePage:!1,title:"Resolving duplicate bindings",description:"In this tutorial we will look at resolution of duplicate bindings using .",source:"@site/docs/inject/duplicate-bindings.mdx",sourceDirName:"inject",slug:"/inject/duplicate-bindings",permalink:"/ru/inject/duplicate-bindings",tags:[],version:"current",frontMatter:{sidebar_label:"Duplicate bindings"},sidebar:"docs",previous:{title:"\u0421\u043a\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430",permalink:"/ru/inject/class-scanning"},next:{title:"Generating bindings",permalink:"/ru/inject/binding-generation"}},u=[{value:"Defining a multibinder",id:"defining-a-multibinder",children:[]},{value:"Resolution of <code>Set&lt;T&gt;</code> bindings",id:"resolution-of-sett-bindings",children:[]},{value:"Resolution of <code>Map&lt;K, V&gt;</code> bindings",id:"resolution-of-mapk-v-bindings",children:[]},{value:"<code>@ProvidesIntoSet</code> annotation",id:"providesintoset-annotation",children:[]}],c={toc:u};function m(e){var n=e.components,t=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"resolving-duplicate-bindings"},"Resolving duplicate bindings"),(0,r.kt)("p",null,"In this tutorial we will look at resolution of duplicate bindings using ",(0,r.kt)(l.Z,{text:"Multibinders",url:"/core-inject/src/main/java/io/activej/inject/binding/Multibinder.java",mdxType:"Githublink"}),"."),(0,r.kt)("h2",{id:"defining-a-multibinder"},"Defining a multibinder"),(0,r.kt)("p",null,"We can define multibinders to be exported from a module."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/inject-2/src/main/java/MultibinderExample.java tag=MULTIBINDER",url:"/examples/core/inject-2/src/main/java/MultibinderExample.java",tag:"MULTIBINDER"},"Module multibinderModule = ModuleBuilder.create()\n    .multibind(Key.of(Integer.class), Multibinders.ofBinaryOperator(Integer::sum))\n    .build();\n")),(0,r.kt)("p",null,"Here we have defined a multibinder for ",(0,r.kt)("inlineCode",{parentName:"p"},"Integer"),"s that simply adds all of the duplicate ",(0,r.kt)("inlineCode",{parentName:"p"},"Integer"),"s together."),(0,r.kt)("p",null,"Let's create a module with multiple duplicate bindings for an ",(0,r.kt)("inlineCode",{parentName:"p"},"Integer"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/inject-2/src/main/java/MultibinderExample.java tag=INTEGERS",url:"/examples/core/inject-2/src/main/java/MultibinderExample.java",tag:"INTEGERS"},"Module integersModule = ModuleBuilder.create()\n    .bind(Integer.class).toInstance(1)\n    .bind(Integer.class).toInstance(10)\n    .bind(Integer.class).toInstance(100)\n    .build();\n")),(0,r.kt)("p",null,"Now let's create an ",(0,r.kt)("inlineCode",{parentName:"p"},"Injector")," from these two modules and obtain an instance of an ",(0,r.kt)("inlineCode",{parentName:"p"},"Integer"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/inject-2/src/main/java/MultibinderExample.java tag=INJECTOR",url:"/examples/core/inject-2/src/main/java/MultibinderExample.java",tag:"INJECTOR"},"Injector injector = Injector.of(multibinderModule, integersModule);\nSystem.out.println(injector.getInstance(Integer.class));\n")),(0,r.kt)("p",null,"The result is ",(0,r.kt)("inlineCode",{parentName:"p"},"111")," as the sum of ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"10")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"100"),"."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If we would try to create an ",(0,r.kt)("inlineCode",{parentName:"p"},"Injector")," using only an ",(0,r.kt)("inlineCode",{parentName:"p"},"integersModule")," without specifying a multibinder, we would get a\n",(0,r.kt)("inlineCode",{parentName:"p"},"Duplicate bindings")," error."))),(0,r.kt)("p",null,"You can find example sources on ",(0,r.kt)(l.Z,{text:"GitHub",url:"/examples/core/inject-2/src/main/java/MultibinderExample.java",mdxType:"Githublink"})),(0,r.kt)("h2",{id:"resolution-of-sett-bindings"},"Resolution of ",(0,r.kt)("inlineCode",{parentName:"h2"},"Set<T>")," bindings"),(0,r.kt)("p",null,"When you have multiple duplicate bindings for ",(0,r.kt)("inlineCode",{parentName:"p"},"Set<T>")," you can automatically resolve them to a ",(0,r.kt)("inlineCode",{parentName:"p"},"Set<T>")," binding that is a union of duplicate sets."),(0,r.kt)("p",null,"To do this you need to use ",(0,r.kt)("inlineCode",{parentName:"p"},"multibindToSet(...)")," method of ",(0,r.kt)("inlineCode",{parentName:"p"},"ModuleBuilder")," DSL."),(0,r.kt)("p",null,"Let's create 2 modules that define bindings for ",(0,r.kt)("inlineCode",{parentName:"p"},"Set<Integer>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/inject-2/src/main/java/MultibindToSetExample.java tag=MODULES",url:"/examples/core/inject-2/src/main/java/MultibindToSetExample.java",tag:"MODULES"},"Key<Set<Integer>> setKey = new Key<Set<Integer>>() {};\n\nModule module1 = ModuleBuilder.create()\n    .bind(setKey).toInstance(new HashSet<>(Arrays.asList(1, 2, 3)))\n    .build();\nModule module2 = ModuleBuilder.create()\n    .bind(setKey).toInstance(new HashSet<>(Arrays.asList(3, 4, 5)))\n    .build();\n")),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"module1")," defines a binding for a ",(0,r.kt)("inlineCode",{parentName:"p"},"Set<Integer>")," that contains elements ",(0,r.kt)("inlineCode",{parentName:"p"},"[1, 2, 3]"),". While ",(0,r.kt)("inlineCode",{parentName:"p"},"module2")," defines a binding\nfor a ",(0,r.kt)("inlineCode",{parentName:"p"},"Set<Integer>")," that contains elements ",(0,r.kt)("inlineCode",{parentName:"p"},"[3, 4, 5]"),"."),(0,r.kt)("p",null,"Now let's create a module with a multibinder using ",(0,r.kt)("inlineCode",{parentName:"p"},"ModuleBuilder#multibindToSet"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/inject-2/src/main/java/MultibindToSetExample.java tag=MULTIBINDER",url:"/examples/core/inject-2/src/main/java/MultibindToSetExample.java",tag:"MULTIBINDER"},"Module multibinderModule = ModuleBuilder.create()\n    .multibindToSet(Integer.class)\n    .build();\n")),(0,r.kt)("p",null,"Finally, let's create an ",(0,r.kt)("inlineCode",{parentName:"p"},"Injector")," from modules and obtain an instance of a ",(0,r.kt)("inlineCode",{parentName:"p"},"Set<Integer>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/inject-2/src/main/java/MultibindToSetExample.java tag=INJECTOR",url:"/examples/core/inject-2/src/main/java/MultibindToSetExample.java",tag:"INJECTOR"},"Injector injector = Injector.of(module1, module2, multibinderModule);\nSystem.out.println(injector.getInstance(setKey));\n")),(0,r.kt)("p",null,"Obtained ",(0,r.kt)("inlineCode",{parentName:"p"},"Set<Integer>")," contains a union of both sets: ",(0,r.kt)("inlineCode",{parentName:"p"},"[1, 2, 3, 4, 5]"),"."),(0,r.kt)("p",null,"You can find example sources on ",(0,r.kt)(l.Z,{text:"GitHub",url:"/examples/core/inject-2/src/main/java/MultibindToSetExample.java",mdxType:"Githublink"})),(0,r.kt)("h2",{id:"resolution-of-mapk-v-bindings"},"Resolution of ",(0,r.kt)("inlineCode",{parentName:"h2"},"Map<K, V>")," bindings"),(0,r.kt)("p",null,"When you have multiple duplicate bindings for ",(0,r.kt)("inlineCode",{parentName:"p"},"Map<K, V>")," you can automatically resolve them to a ",(0,r.kt)("inlineCode",{parentName:"p"},"Map<K, V>")," binding that\ncontains a union of keys and values of all the other maps. This is similar to resolution of ",(0,r.kt)("inlineCode",{parentName:"p"},"Set<T>")," with an exception that\nconflicting maps cannot contain same keys."),(0,r.kt)("p",null,"To enable resolution of ",(0,r.kt)("inlineCode",{parentName:"p"},"Map<K, V>")," bindings you nned to use ",(0,r.kt)("inlineCode",{parentName:"p"},"multibindToMap(...)")," method of ",(0,r.kt)("inlineCode",{parentName:"p"},"ModuleBuilder")," DSL."),(0,r.kt)("p",null,"Let's create 2 modules that define bindings for ",(0,r.kt)("inlineCode",{parentName:"p"},"Map<Integer, String>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/inject-2/src/main/java/MultibindToMapExample.java tag=MODULES",url:"/examples/core/inject-2/src/main/java/MultibindToMapExample.java",tag:"MODULES"},'Key<Map<Integer, String>> mapKey = new Key<Map<Integer, String>>() {};\n\nModule module1 = ModuleBuilder.create()\n    .bind(mapKey).to(() -> {\n      Map<Integer, String> map = new HashMap<>();\n      map.put(1, "one");\n      map.put(2, "two");\n      map.put(3, "three");\n      return map;\n    })\n    .build();\n\nModule module2 = ModuleBuilder.create()\n    .bind(mapKey).to(() -> {\n      Map<Integer, String> map = new HashMap<>();\n      map.put(4, "four");\n      map.put(5, "five");\n      map.put(6, "six");\n      return map;\n    })\n    .build();\n')),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"module1")," defines a binding for a ",(0,r.kt)("inlineCode",{parentName:"p"},"Map<Integer, String>")," that contains entries ",(0,r.kt)("inlineCode",{parentName:"p"},'[1="one", 2="two", 3="three"]'),". While ",(0,r.kt)("inlineCode",{parentName:"p"},"module2")," defines a binding\nfor a ",(0,r.kt)("inlineCode",{parentName:"p"},"Map<Integer, String>")," that contains entries ",(0,r.kt)("inlineCode",{parentName:"p"},'[4="four", 5="five", 6="six"]'),". Notice, that maps does not contain same keys."),(0,r.kt)("p",null,"Now let's create a module with a multibinder using ",(0,r.kt)("inlineCode",{parentName:"p"},"ModuleBuilder#multibindToMap"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/inject-2/src/main/java/MultibindToMapExample.java tag=MULTIBINDER",url:"/examples/core/inject-2/src/main/java/MultibindToMapExample.java",tag:"MULTIBINDER"},"Module multibinderModule = ModuleBuilder.create()\n    .multibindToMap(Integer.class, String.class)\n    .build();\n")),(0,r.kt)("p",null,"Finally, let's create an ",(0,r.kt)("inlineCode",{parentName:"p"},"Injector")," from modules and obtain an instance of a ",(0,r.kt)("inlineCode",{parentName:"p"},"Map<Integer, String>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/inject-2/src/main/java/MultibindToMapExample.java tag=INJECTOR",url:"/examples/core/inject-2/src/main/java/MultibindToMapExample.java",tag:"INJECTOR"},"Injector injector = Injector.of(module1, module2, multibinderModule);\nSystem.out.println(injector.getInstance(mapKey));\n")),(0,r.kt)("p",null,"Obtained ",(0,r.kt)("inlineCode",{parentName:"p"},"Map<Integer, String>")," is a merged map that contains all of the entries of conflicting maps:\n",(0,r.kt)("inlineCode",{parentName:"p"},'[1="one", 2="two", 3="three", 4="four", 5="five", 6="six"]'),"."),(0,r.kt)("p",null,"You can find example sources on ",(0,r.kt)(l.Z,{text:"GitHub",url:"/examples/core/inject-2/src/main/java/MultibindToMapExample.java",mdxType:"Githublink"})),(0,r.kt)("h2",{id:"providesintoset-annotation"},(0,r.kt)("inlineCode",{parentName:"h2"},"@ProvidesIntoSet")," annotation"),(0,r.kt)("p",null,"ActiveJ Inject supports a special ",(0,r.kt)("inlineCode",{parentName:"p"},"@ProvidesIntoSet")," annotation that can be used in place of ",(0,r.kt)("inlineCode",{parentName:"p"},"@Provides")," annotation.\nThis annotation on a method with a return type ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," creates a binding of ",(0,r.kt)("inlineCode",{parentName:"p"},"Set<T>")," and transforms a provided instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"\ninto a ",(0,r.kt)("inlineCode",{parentName:"p"},"Set<T>")," that contains a single element ",(0,r.kt)("inlineCode",{parentName:"p"},"[T]"),"."),(0,r.kt)("p",null,"When ",(0,r.kt)("inlineCode",{parentName:"p"},"@ProvidesIntoSet"),"annotation is used all the duplicate ",(0,r.kt)("inlineCode",{parentName:"p"},"Set<T>")," bindings a resolved to a set that is a union\nof all the other provided sets of type ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"."),(0,r.kt)("p",null,"Let's define three modules that provide ",(0,r.kt)("inlineCode",{parentName:"p"},"Integer"),"s using methods marked with @ProvidesIntoSet` annotations:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/inject-2/src/main/java/ProvidesIntoSetExample.java tag=MODULE_1",url:"/examples/core/inject-2/src/main/java/ProvidesIntoSetExample.java",tag:"MODULE_1"},"public static final class MyModule1 extends AbstractModule {\n  @ProvidesIntoSet\n  Integer integer() {\n    return 1;\n  }\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/inject-2/src/main/java/ProvidesIntoSetExample.java tag=MODULE_2",url:"/examples/core/inject-2/src/main/java/ProvidesIntoSetExample.java",tag:"MODULE_2"},"public static final class MyModule2 extends AbstractModule {\n  @ProvidesIntoSet\n  Integer integer() {\n    return 2;\n  }\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/inject-2/src/main/java/ProvidesIntoSetExample.java tag=MODULE_3",url:"/examples/core/inject-2/src/main/java/ProvidesIntoSetExample.java",tag:"MODULE_3"},"public static final class MyModule3 extends AbstractModule {\n  @ProvidesIntoSet\n  Integer integer() {\n    return 3;\n  }\n}\n")),(0,r.kt)("p",null,"Finally, let's create an ",(0,r.kt)("inlineCode",{parentName:"p"},"Injector")," from those 3 modules and obtain an instance of a ",(0,r.kt)("inlineCode",{parentName:"p"},"Set<Integer>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"````mdx-code-block\n```java url=/examples/core/inject-2/src/main/java/ProvidesIntoSetExample.java tag=INJECTOR\n```\n")),(0,r.kt)("p",null,"When requesting an instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"Set<Integer>")," from the ",(0,r.kt)("inlineCode",{parentName:"p"},"Injector")," we received a set containing elements ",(0,r.kt)("inlineCode",{parentName:"p"},"[1, 2, 3]"),"."),(0,r.kt)("p",null,"You can find example sources on ",(0,r.kt)(l.Z,{text:"GitHub",url:"/examples/core/inject-2/src/main/java/ProvidesIntoSetExample.java",mdxType:"Githublink"})))}m.isMDXComponent=!0}}]);