(self.webpackChunkactivejdocs=self.webpackChunkactivejdocs||[]).push([[8436],{77618:function(e,t,a){"use strict";var r=a(67294),n=a(39962);t.Z=function(e){var t=e.url,a=e.text,i=e.isInline,s=void 0===i||i,m=e.children,l=(0,n.Z)().siteConfig,o=t.startsWith("/examples")?l.customFields.githubExamplesBranch:l.customFields.githubBranch;return r.createElement("a",{style:s?{}:{display:"block",marginBottom:"16px"},href:l.customFields.githubUrl+"/"+o+t,target:"_blank"},a||m)}},14304:function(e,t,a){"use strict";var r=a(67294),n=a(21140),i=a.n(n);i().initialize({startOnLoad:!0});t.Z=function(e){var t=e.chart;return(0,r.useEffect)((function(){i().contentLoaded()}),[]),r.createElement("div",{className:"mermaid"},t)}},77815:function(e,t,a){"use strict";a(67294);var r=a(39962);t.Z=function(e){var t=e.name,a=(0,r.Z)().siteConfig;if(!t)throw new Error("Variable name is required");if(void 0===a.customFields[t])throw new Error("Variable "+t+" not exist");return a.customFields[t]}},37571:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return p},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return c},default:function(){return h}});var r=a(83117),n=a(80102),i=(a(67294),a(3905)),s=a(77618),m=a(14304),l=a(77815),o=["components"],p={title:"ActiveJ | Datastream, \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0440\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043f\u043e\u0442\u043e\u043a\u0438 Java \u0441 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u043e\u0432\u0435\u0440\u0445\u0435\u0434\u043e\u043c",description:"\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0440\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043f\u043e\u0442\u043e\u043a\u0438 Java \u0441 \u0447\u0440\u0435\u0437\u0432\u044b\u0447\u0430\u0439\u043d\u043e \u043d\u0438\u0437\u043a\u0438\u043c \u043e\u0432\u0435\u0440\u0445\u0435\u0434\u043e\u043c",sidebar_label:"Datastream",keywords:["datastream","\u0440\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043f\u043e\u0442\u043e\u043a\u0438","\u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0440\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043f\u043e\u0442\u043e\u043a\u0438","java","java framework"]},u="Datastream",d={unversionedId:"async-io/datastream",id:"async-io/datastream",isDocsHomePage:!1,title:"ActiveJ | Datastream, \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0440\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043f\u043e\u0442\u043e\u043a\u0438 Java \u0441 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u043e\u0432\u0435\u0440\u0445\u0435\u0434\u043e\u043c",description:"\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0440\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043f\u043e\u0442\u043e\u043a\u0438 Java \u0441 \u0447\u0440\u0435\u0437\u0432\u044b\u0447\u0430\u0439\u043d\u043e \u043d\u0438\u0437\u043a\u0438\u043c \u043e\u0432\u0435\u0440\u0445\u0435\u0434\u043e\u043c",source:"@site/i18n/ru/docusaurus-plugin-content-docs/current/async-io/datastream.mdx",sourceDirName:"async-io",slug:"/async-io/datastream",permalink:"/ru/async-io/datastream",tags:[],version:"current",frontMatter:{title:"ActiveJ | Datastream, \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0440\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043f\u043e\u0442\u043e\u043a\u0438 Java \u0441 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u043e\u0432\u0435\u0440\u0445\u0435\u0434\u043e\u043c",description:"\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0440\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043f\u043e\u0442\u043e\u043a\u0438 Java \u0441 \u0447\u0440\u0435\u0437\u0432\u044b\u0447\u0430\u0439\u043d\u043e \u043d\u0438\u0437\u043a\u0438\u043c \u043e\u0432\u0435\u0440\u0445\u0435\u0434\u043e\u043c",sidebar_label:"Datastream",keywords:["datastream","\u0440\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043f\u043e\u0442\u043e\u043a\u0438","\u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0440\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043f\u043e\u0442\u043e\u043a\u0438","java","java framework"]},sidebar:"docs",previous:{title:"CSP",permalink:"/ru/async-io/csp"},next:{title:"Net",permalink:"/ru/async-io/net"}},c=[{value:"\u041e\u0431\u0437\u043e\u0440",id:"\u043e\u0431\u0437\u043e\u0440",children:[],level:2},{value:"\u0425\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438",id:"\u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438",children:[],level:2},{value:"\u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0441 CSP",id:"\u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435-\u0441-csp",children:[],level:2},{value:"\u0411\u0435\u043d\u0447\u043c\u0430\u0440\u043a\u0438",id:"\u0431\u0435\u043d\u0447\u043c\u0430\u0440\u043a\u0438",children:[],level:2},{value:"\u041f\u0440\u0438\u043c\u0435\u0440\u044b",id:"\u043f\u0440\u0438\u043c\u0435\u0440\u044b",children:[{value:"\u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u0449\u0438\u043a",id:"\u043f\u0440\u043e\u0441\u0442\u043e\u0439-\u043f\u043e\u0441\u0442\u0430\u0432\u0449\u0438\u043a",children:[],level:3}],level:2}],k={toc:c};function h(e){var t=e.components,a=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"datastream"},"Datastream"),(0,i.kt)("h2",{id:"\u043e\u0431\u0437\u043e\u0440"},"\u041e\u0431\u0437\u043e\u0440"),(0,i.kt)("p",null,"Datastream - \u044d\u0442\u043e \u0447\u0440\u0435\u0437\u0432\u044b\u0447\u0430\u0439\u043d\u043e \u0431\u044b\u0441\u0442\u0440\u0430\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0440\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u043e\u0442\u043e\u043a\u043e\u0432. \u041e\u043d \u043f\u043e\u043b\u0435\u0437\u0435\u043d \u0434\u043b\u044f \u0432\u043d\u0443\u0442\u0440\u0438\u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0438 \u043c\u0435\u0436\u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0441\u0432\u044f\u0437\u0438 \u0438 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445."),(0,i.kt)("h2",{id:"\u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438"},"\u0425\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u0421\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 \u0440\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u043e\u0442\u043e\u043a\u043e\u0432 (\u0432 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442 \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u0432 Java 8 \u0438 \u0442\u0440\u0430\u0434\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0445 \u0431\u043b\u043e\u043a\u0438\u0440\u0443\u044e\u0449\u0438\u0445 \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0442\u0440\u0435\u0434\u043e\u0432)"),(0,i.kt)("li",{parentName:"ul"},"\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u0441 \u0447\u0440\u0435\u0437\u0432\u044b\u0447\u0430\u0439\u043d\u043e \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u043c \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c back-pressure, \u0447\u0442\u043e\u0431\u044b \u0441\u043f\u0440\u0430\u0432\u0438\u0442\u044c\u0441\u044f \u0441 \u0435\u0441\u0442\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u043c \u0434\u0438\u0441\u0431\u0430\u043b\u0430\u043d\u0441\u043e\u043c \u0432 \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u0438 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u0432 \u0434\u0430\u043d\u043d\u044b\u0445"),(0,i.kt)("li",{parentName:"ul"},"\u041a\u043e\u043c\u043f\u043e\u0437\u0438\u0446\u0438\u043e\u043d\u043d\u043e \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u044b\u0435 \u043f\u043e\u0442\u043e\u043a\u043e\u0432\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 (\u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u0435\u043b\u0438, \u0440\u0435\u0434\u0443\u043a\u0442\u043e\u0440\u044b, \u0444\u0438\u043b\u044c\u0442\u0440\u044b, \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0438, \u0441\u043b\u0438\u044f\u043d\u0438\u044f/\u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u044f, \u0441\u0436\u0430\u0442\u0438\u0435, \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f)"),(0,i.kt)("li",{parentName:"ul"},"\u041f\u043e\u0442\u043e\u043a\u043e\u0432\u044b\u0439 \u0441\u0435\u0442\u0435\u0432\u043e\u0439 \u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0439 \u0432\u0432\u043e\u0434-\u0432\u044b\u0432\u043e\u0434 \u043f\u043e\u0432\u0435\u0440\u0445 \u043c\u043e\u0434\u0443\u043b\u044f ",(0,i.kt)("a",{parentName:"li",href:"/ru/async-io/eventloop"},"Eventloop.")),(0,i.kt)("li",{parentName:"ul"},"\u0421\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c \u0441 \u043c\u043e\u0434\u0443\u043b\u0435\u043c ",(0,i.kt)("a",{parentName:"li",href:"/ru/async-io/csp"},"CSP"))),(0,i.kt)("h2",{id:"\u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435-\u0441-csp"},"\u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0441 CSP"),(0,i.kt)("p",null,"\u0423 Datastream \u043c\u043d\u043e\u0433\u043e \u043e\u0431\u0449\u0435\u0433\u043e \u0441 \u043c\u043e\u0434\u0443\u043b\u0435\u043c CSP. \u0425\u043e\u0442\u044f \u043e\u043d\u0438 \u043e\u0431\u0430 \u0431\u044b\u043b\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u044b \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u0432\u043e\u0434\u0430-\u0432\u044b\u0432\u043e\u0434\u0430, \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u0430\u0436\u043d\u044b\u0445 \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u0439:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null}),(0,i.kt)("th",{parentName:"tr",align:null},"Datastream"),(0,i.kt)("th",{parentName:"tr",align:null},"CSP"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Overhead:")),(0,i.kt)("td",{parentName:"tr",align:null},"\u041a\u0440\u0430\u0439\u043d\u0435 \u043d\u0438\u0437\u043a\u0430\u044f \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c: \u043f\u043e\u0442\u043e\u043a \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0441 1 \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430, \u043e\u0446\u0435\u043d\u043a\u0430 \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0433\u043e \u0437\u0430\u043c\u044b\u043a\u0430\u043d\u0438\u044f \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c"),(0,i.kt)("td",{parentName:"tr",align:null},"\u041d\u0435\u0442 \u043e\u0446\u0435\u043d\u043a\u0438 \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0433\u043e \u0437\u0430\u043c\u044b\u043a\u0430\u043d\u0438\u044f, overhead \u0432\u044b\u0448\u0435")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"\u0421\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043d\u043e\u0439 \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u0438:")),(0,i.kt)("td",{parentName:"tr",align:null},"\u0427\u0440\u0435\u0437\u0432\u044b\u0447\u0430\u0439\u043d\u043e \u0431\u044b\u0441\u0442\u0440\u043e (",(0,i.kt)("em",{parentName:"td"},"360 880 548 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443"),")"),(0,i.kt)("td",{parentName:"tr",align:null},"\u0411\u044b\u0441\u0442\u0440\u043e (",(0,i.kt)("em",{parentName:"td"},"105 932 203 \u043e\u043f/\u0441"),"), \u043d\u043e \u043c\u0435\u0434\u043b\u0435\u043d\u043d\u0435\u0435, \u0447\u0435\u043c Datastream.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043e \u0434\u043b\u044f:")),(0,i.kt)("td",{parentName:"tr",align:null},"\u041d\u0435\u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u044b \u0434\u0430\u043d\u043d\u044b\u0445"),(0,i.kt)("td",{parentName:"tr",align:null},"\u041e\u0431\u044a\u0435\u043a\u0442\u044b \u0441\u0440\u0435\u0434\u043d\u0435\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430, ",(0,i.kt)("a",{parentName:"td",href:"/ru/misc/bytebuf"},(0,i.kt)("inlineCode",{parentName:"a"},"ByteBufs")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"\u041c\u043e\u0434\u0435\u043b\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f:")),(0,i.kt)("td",{parentName:"tr",align:null},"\u0411\u043e\u043b\u0435\u0435 \u0441\u043b\u043e\u0436\u043d\u0430\u044f"),(0,i.kt)("td",{parentName:"tr",align:null},"\u041f\u0440\u043e\u0441\u0442\u043e\u0442\u0430 \u0438 \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u043e")))),(0,i.kt)("p",null,"\u0414\u043b\u044f \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u044f \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 ActiveJ \u0448\u0438\u0440\u043e\u043a\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0438 CSP \u0438 Datastream. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e ",(0,i.kt)(s.Z,{url:"/core-csp/src/main/java/io/activej/csp/ChannelSupplier.java",mdxType:"Githublink"},(0,i.kt)("inlineCode",{parentName:"p"},"ChannelSupplier")),", ",(0,i.kt)(s.Z,{url:"/core-csp/src/main/java/io/activej/csp/ChannelConsumer.java",mdxType:"Githublink"},(0,i.kt)("inlineCode",{parentName:"p"},"ChannelConsumer")),", ",(0,i.kt)(s.Z,{url:"/core-datastream/src/main/java/io/activej/datastream/StreamSupplier.java",mdxType:"Githublink"},(0,i.kt)("inlineCode",{parentName:"p"},"StreamSupplier"))," \u0438 ",(0,i.kt)(s.Z,{url:"/core-datastream/src/main/java/io/activej/datastream/StreamConsumer.java",mdxType:"Githublink"},(0,i.kt)("inlineCode",{parentName:"p"},"StreamConsumer"))," \u0438\u043c\u0435\u044e\u0442 \u043c\u0435\u0442\u043e\u0434\u044b ",(0,i.kt)("inlineCode",{parentName:"p"},"transformWith()")," \u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b Transformer. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u044d\u0442\u0438 \u043c\u0435\u0442\u043e\u0434\u044b \u0438 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043b\u0435\u0433\u043a\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u044b\u0432\u0430\u0442\u044c \u043a\u0430\u043d\u0430\u043b\u044b \u0432 \u0434\u0440\u0443\u0433\u0438\u0435 \u043a\u0430\u043d\u0430\u043b\u044b \u0438\u043b\u0438 \u043f\u043e\u0442\u043e\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043d\u0430\u043e\u0431\u043e\u0440\u043e\u0442, \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u044f \u0446\u0435\u043f\u043e\u0447\u043a\u0438 \u0442\u0430\u043a\u0438\u0445 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0439."),(0,i.kt)("h2",{id:"\u0431\u0435\u043d\u0447\u043c\u0430\u0440\u043a\u0438"},"\u0411\u0435\u043d\u0447\u043c\u0430\u0440\u043a\u0438"),(0,i.kt)("p",null,"\u041c\u044b \u0438\u0437\u043c\u0435\u0440\u0438\u043b\u0438 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c Datastream (",(0,i.kt)("inlineCode",{parentName:"p"},"StreamSupplier")," \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 100M Integer \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044e ",(0,i.kt)("inlineCode",{parentName:"p"},"StreamConsumer")," ) \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"\u0412\u0440\u0435\u043c\u044f: 2771 \u043c\u0441; \u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u0432\u0440\u0435\u043c\u044f: 277,1 \u043c\u0441; \u041b\u0443\u0447\u0448\u0435\u0435 \u0432\u0440\u0435\u043c\u044f: 275 \u043c\u0441; \u0425\u0443\u0434\u0448\u0435\u0435 \u0432\u0440\u0435\u043c\u044f: 281 \u043c\u0441; \u041e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443: 360 880 548\n")),(0,i.kt)("p",null,"\u041c\u044b \u0442\u0430\u043a\u0436\u0435 \u0438\u0437\u043c\u0435\u0440\u0438\u043b\u0438 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c TCP-\u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0449\u0435\u0433\u043e \u043a\u0430\u043a Datastream, \u0442\u0430\u043a \u0438 CSP, \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u0441\u0440\u0435\u0434\u043d\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 ",(0,i.kt)("strong",{parentName:"p"},"47 495 905 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443"),"."),(0,i.kt)("p",null,"\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043d\u0430\u0439\u0442\u0438 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b \u0431\u0435\u043d\u0447\u043c\u0430\u0440\u043a\u043e\u0432 \u043d\u0430 ",(0,i.kt)(s.Z,{url:"/benchmarks/datastream/src/main/java/io/activej/datastream/DatastreamBenchmark.java",mdxType:"Githublink"},(0,i.kt)("strong",{parentName:"p"},"GitHub"))),(0,i.kt)("h2",{id:"\u043f\u0440\u0438\u043c\u0435\u0440\u044b"},"\u041f\u0440\u0438\u043c\u0435\u0440\u044b"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#simple-supplier"},"\u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u0449\u0438\u043a")," - \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u043a\u0430\u043a \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 ",(0,i.kt)("inlineCode",{parentName:"li"},"StreamSupplier")," \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 ",(0,i.kt)("inlineCode",{parentName:"li"},"StreamConsumer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#simple-consumer"},"\u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u043e\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c")," - \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u043a\u0430\u043a \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 ",(0,i.kt)("inlineCode",{parentName:"li"},"StreamConsumer.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#custom-transformer"},"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0442\u0440\u0430\u043d\u0441\u0444\u043e\u0440\u043c\u0435\u0440")," - \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u043a\u0430\u043a \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 ",(0,i.kt)(s.Z,{url:"/core-datastream/src/main/java/io/activej/datastream/processor/StreamTransformer.java",mdxType:"Githublink"},(0,i.kt)("inlineCode",{parentName:"li"},"StreamTransformer")),", \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0438\u0445 \u043a \u0441\u0432\u043e\u0435\u0439 \u0434\u043b\u0438\u043d\u0435, \u0435\u0441\u043b\u0438 \u043e\u043d\u0430 \u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c ",(0,i.kt)("inlineCode",{parentName:"li"},"MAX_LENGTH"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#built-in-stream-nodes"},"\u0412\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0435 \u0443\u0437\u043b\u044b \u043f\u043e\u0442\u043e\u043a\u0430 \u041f\u0440\u0438\u043c\u0435\u0440")," - \u0434\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 Datastream, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435, \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0438 \u0441\u043e\u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435.")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"\u0427\u0442\u043e\u0431\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043f\u0440\u0438\u043c\u0435\u0440\u044b, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043a\u043b\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c ActiveJ \u0441 GitHub"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/activej/activej\n")),(0,i.kt)("p",{parentName:"div"},"\u0418 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0435\u0433\u043e \u043a\u0430\u043a \u043f\u0440\u043e\u0435\u043a\u0442 Maven. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u0442\u0435\u0433 ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(l.Z,{name:"currentVersion",mdxType:"Variable"})),". \u041f\u0435\u0440\u0435\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u0432 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u0431\u043e\u0440\u043a\u0443 \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u042d\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u044b \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 ",(0,i.kt)("inlineCode",{parentName:"p"},"activej/examples/core/datastream.")))),(0,i.kt)("h3",{id:"\u043f\u0440\u043e\u0441\u0442\u043e\u0439-\u043f\u043e\u0441\u0442\u0430\u0432\u0449\u0438\u043a"},"\u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u0449\u0438\u043a"),(0,i.kt)("p",null,"\u041a\u043e\u0433\u0434\u0430 \u0432\u044b \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0435 ",(0,i.kt)(s.Z,{url:"/examples/core/datastream/src/main/java/SupplierExample.java",mdxType:"Githublink"},(0,i.kt)("inlineCode",{parentName:"p"},"SupplierExample")),"\u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"\u041f\u043e\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c \u043f\u043e\u043b\u0443\u0447\u0435\u043d: [0, 1, 2, 3, 4]\n")),(0,i.kt)("p",null,"\u042d\u0442\u043e\u0442 \u0432\u044b\u0432\u043e\u0434 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430\u0448 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c ",(0,i.kt)("inlineCode",{parentName:"p"},"StreamSupplier")," \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u0438\u043b ",(0,i.kt)("inlineCode",{parentName:"p"},"StreamConsumer"),". \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e :"),(0,i.kt)("p",null,"``java url=/examples/core/datastream/src/main/java/SupplierExample.java tag=EXAMPLE"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"**<Githublink url='/examples/core/datastream/src/main/java/SupplierExample.java'>\u041f\u043e\u043b\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u043d\u0430 GitHub.</Githublink>**\n### \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u043e\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c\n\u041a\u043e\u0433\u0434\u0430 \u0432\u044b \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0435 <Githublink url='/examples/core/datastream/src/main/java/ConsumerExample.java'>`ConsumerExample`</Githublink>\u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:\n\n```bash\n\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043e: 1\n\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043e: 2\n\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043e: 3\n\u041a\u043e\u043d\u0435\u0446 \u043f\u043e\u0442\u043e\u043a\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\n```\n\n`ConsumerExample` \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u043f\u043e\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u0442 <Githublink url='/core-datastream/src/main/java/io/activej/datastream/AbstractStreamConsumer.java'>`AbstractStreamConsumer`</Githublink> \u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u0440\u0430\u0441\u043f\u0435\u0447\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435. \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u043c \u043f\u043e\u0442\u043e\u043a\u0430 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 `onStarted()`, `onEndOfStream()` \u0438 `onError()`:\n\n````mdx-code-block\n``java url=/examples/core/datastream/src/main/java/ConsumerExample.java tag=EXAMPLE\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"**<Githublink url='/examples/core/datastream/src/main/java/ConsumerExample.java'>\u041f\u043e\u043b\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u043d\u0430 GitHub.</Githublink>**\n### \u0418\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u0440\u0430\u043d\u0441\u0444\u043e\u0440\u043c\u0430\u0442\u043e\u0440\n[<Githublink url='/examples/core/datastream/src/main/java/TransformerExample.java'>`\u041f\u0440\u0438\u043c\u0435\u0440 \u0442\u0440\u0430\u043d\u0441\u0444\u043e\u0440\u043c\u0430\u0442\u043e\u0440\u0430`</Githublink>](#) \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u043a\u0430\u043a \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 `StreamTransformer` , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438\u0437 \u0432\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u043f\u043e\u0442\u043e\u043a\u0430 \u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0438\u0445 \u0432 \u0441\u0432\u043e\u044e \u0434\u043b\u0438\u043d\u0443, \u0435\u0441\u043b\u0438 \u043e\u043d\u0430 \u043c\u0435\u043d\u044c\u0448\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 `MAX_LENGTH`. \u0412\u043e-\u043f\u0435\u0440\u0432\u044b\u0445, \u043c\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c `AbstractStreamConsumer` \u0438 <Githublink url='/core-datastream/src/main/java/io/activej/datastream/AbstractStreamSupplier.java'>`AbstractStreamSupplier`</Githublink>:\n\n````mdx-code-block\n``java url=/examples/core/datastream/src/main/java/TransformerExample.java tag=REGION_1\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u0422\u0435\u043f\u0435\u0440\u044c \u043c\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c \u043c\u0435\u0442\u043e\u0434 `main` , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043f\u043e\u0441\u0442\u0430\u0432\u0449\u0438\u043a\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445, \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 `TransformerExample` \u0438 <Githublink url='/core-datastream/src/main/java/io/activej/datastream/StreamConsumerToList.java'>`StreamConsumerToList`</Githublink> \u0414\u0430\u043b\u0435\u0435 \u043c\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0432\u044b\u0432\u043e\u0434\u0430:\n\n````mdx-code-block\n``java url=/examples/core/datastream/src/main/java/TransformerExample.java tag=REGION_2\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u0415\u0441\u043b\u0438 \u0432\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u043f\u0440\u0438\u043c\u0435\u0440, \u0442\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:\n\n```java\n[8, 9]\n```\n\n**<Githublink url='/examples/core/datastream/src/main/java/TransformerExample.java'>\u041f\u043e\u043b\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u043d\u0430 GitHub.</Githublink>**\n\n### \u0412\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0435 \u043f\u043e\u0442\u043e\u043a\u043e\u0432\u044b\u0435 \u0443\u0437\u043b\u044b\n\n[<Githublink url='/examples/core/datastream/src/main/java/BuiltinNodesExample.java'>`BuiltinStreamNodesExample`</Githublink>](#) \u0434\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0445 \u0443\u0437\u043b\u043e\u0432 \u043f\u043e\u0442\u043e\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445.\n\nThe first one is <Githublink url='/core-datastream/src/main/java/io/activej/datastream/processor/StreamFilter.java'>`StreamFilter`</Githublink> It allows to apply a function to the input and then stream the function's result to the destination. In this particular example `StreamFilter` filters input numbers and then streams to consumer only odd numbers.\n\n````mdx-code-block\n```java url=/examples/core/datastream/src/main/java/BuiltinNodesExample.java tag=REGION_1\n```\n")),(0,i.kt)("p",null,"The output for this example is ",(0,i.kt)("inlineCode",{parentName:"p"},"[1, 3, 5, 7, 9]"),", while the graph of streams is pretty simple and looks as follows:"),(0,i.kt)(m.Z,{chart:"\ngraph TD\n    id1(StreamSuppliers$OfIterator)--\x3eid2(StreamFilter$Input)--\x3eid3([StreamFilter])--\x3eid4(StreamFilter$Output)--\x3eid5(StreamConsumerToList)\n    style id1 stroke:#3578ep,stroke-width:2px\n    style id2 stroke:#fa383e,stroke-width:2px\n    style id3 stroke:#a4a6a8,stroke-width:2px\n    style id4 stroke:#3578ep,stroke-width:2px\n    style id5 stroke:#fa383e,stroke-width:2px\n",mdxType:"Mermaid"}),(0,i.kt)("p",null,"Another built-in stream node is ",(0,i.kt)(s.Z,{url:"/core-datastream/src/main/java/io/activej/datastream/processor/StreamFilter.java",mdxType:"Githublink"},(0,i.kt)("inlineCode",{parentName:"p"},"StreamFilter::mapper"))),(0,i.kt)("p",null,"It changes each input item according to the given function, for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/datastream/src/main/java/BuiltinNodesExample.java tag=REGION_3",url:"/examples/core/datastream/src/main/java/BuiltinNodesExample.java",tag:"REGION_3"},'private static void mapper() {\n  //creating a supplier of 10 numbers\n  StreamSupplier<Integer> supplier = StreamSupplier.of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\n  //creating a mapper for the numbers\n  StreamFilter<Integer, String> simpleMap = StreamFilter.mapper(x -> x + " times ten = " + x * 10);\n\n  //creating a consumer which converts received values to list\n  StreamConsumerToList<String> consumer = StreamConsumerToList.create();\n\n  //applying the mapper to supplier and streaming the result to consumer\n  supplier.transformWith(simpleMap).streamTo(consumer);\n\n  //when consumer completes receiving values, the result is printed out\n  consumer.getResult().whenResult(v -> System.out.println(v));\n}\n')),(0,i.kt)("p",null,"The output for this example is"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"[\n    1 times ten = 10,\n    2 times ten = 20,\n    3 times ten = 30,\n    4 times ten = 40,\n    5 times ten = 50,\n    6 times ten = 60,\n    7 times ten = 70,\n    8 times ten = 80,\n    9 times ten = 90,\n    10 times ten = 100\n]\n")),(0,i.kt)("p",null,"and the graph of streams looks as follows:"),(0,i.kt)(m.Z,{chart:"\ngraph TD\n    id1(StreamSuppliers$OfIterator)--\x3eid2(StreamMapper$Input)--\x3eid3([StreamMapper])--\x3eid4(StreamMapper$Output)--\x3eid5(StreamConsumerToList)\n    style id1 stroke:#3578ep,stroke-width:2px\n    style id2 stroke:#fa383e,stroke-width:2px\n    style id3 stroke:#a4a6a8,stroke-width:2px\n    style id4 stroke:#3578ep,stroke-width:2px\n    style id5 stroke:#fa383e,stroke-width:2px\n",mdxType:"Mermaid"}),(0,i.kt)("p",null,"Let's take a look at another built-in node ",(0,i.kt)(s.Z,{url:"/core-datastream/src/main/java/io/activej/datastream/processor/StreamSplitter.java",mdxType:"Githublink"},(0,i.kt)("inlineCode",{parentName:"p"},"StreamSplitter"))),(0,i.kt)("p",null,"It's a stream transformer that distributes input streams according to the provided function. In this example it distributes 10 numbers between 3 consumers."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/datastream/src/main/java/BuiltinNodesExample.java tag=REGION_2",url:"/examples/core/datastream/src/main/java/BuiltinNodesExample.java",tag:"REGION_2"},'private static void splitter() {\n  StreamSupplier<Integer> supplier = StreamSupplier.of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\n  ToIntFunction<Object> hashSharder = item -> (item.hashCode() & Integer.MAX_VALUE) % 3;\n  //creating a sharder of three parts for three consumers\n  StreamSplitter<Integer, Integer> sharder = StreamSplitter.create(\n      (item, acceptors) -> acceptors[hashSharder.applyAsInt(item)].accept(item));\n\n  StreamConsumerToList<Integer> first = StreamConsumerToList.create();\n  StreamConsumerToList<Integer> second = StreamConsumerToList.create();\n  StreamConsumerToList<Integer> third = StreamConsumerToList.create();\n\n  sharder.newOutput().streamTo(first);\n  sharder.newOutput().streamTo(second);\n  sharder.newOutput().streamTo(third);\n\n  supplier.streamTo(sharder.getInput());\n\n  first.getResult().whenResult(x -> System.out.println("first: " + x));\n  second.getResult().whenResult(x -> System.out.println("second: " + x));\n  third.getResult().whenResult(x -> System.out.println("third: " + x));\n}\n')),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"In this example we can't use a shortcut method ",(0,i.kt)("inlineCode",{parentName:"p"},"transformWith")," as it can be used only with the transformers that have exactly one input and one output streams."))),(0,i.kt)("p",null,"The output for this example is"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"first: [3, 6, 9]\nsecond: [1, 4, 7, 10]\nthird: [2, 5, 8]`\n")),(0,i.kt)("p",null,"And the streams graph looks as follows:"),(0,i.kt)(m.Z,{chart:"\ngraph TD;\n    id7(StreamSuppliers$OfIterator):::blue--\x3eid8(StreamSplitter$Input);\n    id8--\x3eStreamSplitter:::grey;\n    StreamSplitter--\x3eid1(StreamSplitter$Output);\n    StreamSplitter--\x3eid2(StreamSplitter$Output);\n    StreamSplitter--\x3eid3(StreamSplitter$Output);\n    id1--\x3eid4(StreamConsumerToList);\n    id2--\x3eid5(StreamConsumerToList);\n    id3--\x3eid6(StreamConsumerToList);\n",mdxType:"Mermaid"}),(0,i.kt)("p",null,"You can provide any function in the lambda when you create ",(0,i.kt)("strong",{parentName:"p"},"StreamSplitter"),". For example, to create a transformer that will send all input data to all the consumers, simply create the following lambda expression:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"(item, acceptors) -> {for (StreamDataAcceptor<Integer> acceptor : acceptors) { acceptor.accept(item);}}\n")),(0,i.kt)("p",null,"In this case the output will be"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"first: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nsecond: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nthird: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n")),(0,i.kt)("p",null,"Finally, let's take a look at the ",(0,i.kt)(s.Z,{url:"/core-datastream/src/main/java/io/activej/datastream/processor/StreamUnion.java",mdxType:"Githublink"},(0,i.kt)("inlineCode",{parentName:"p"},"StreamUnion"))," It works as an opposite to the ",(0,i.kt)("inlineCode",{parentName:"p"},"StreamSplitter")," and unifies several input streams into one output:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/core/datastream/src/main/java/BuiltinNodesExample.java tag=REGION_4",url:"/examples/core/datastream/src/main/java/BuiltinNodesExample.java",tag:"REGION_4"},"private static void union() {\n  //creating three suppliers of numbers\n  StreamSupplier<Integer> source0 = StreamSupplier.of(1, 2);\n  StreamSupplier<Integer> source1 = StreamSupplier.of();\n  StreamSupplier<Integer> source2 = StreamSupplier.of(3, 4, 5);\n\n  //creating a unifying transformer\n  StreamUnion<Integer> streamUnion = StreamUnion.create();\n\n  //creating a consumer which converts received values to list\n  StreamConsumerToList<Integer> consumer = StreamConsumerToList.create();\n\n  //stream the sources into new inputs of the unifier\n  source0.streamTo(streamUnion.newInput());\n  source1.streamTo(streamUnion.newInput());\n  source2.streamTo(streamUnion.newInput());\n\n  //and stream the output of the unifier into the consumer\n  streamUnion.getOutput().streamTo(consumer);\n\n  //when consumer completes receiving values, the result is printed out\n  consumer.getResult().whenResult(v -> System.out.println(v));\n}\n")),(0,i.kt)("p",null,"The output for this example is ",(0,i.kt)("inlineCode",{parentName:"p"},"[1, 2, 3, 4, 5]")," and the graph of streams looks as follows:"),(0,i.kt)(m.Z,{chart:"\ngraph TD;\n    id1(StreamSuppliers$OfIterator)--\x3eid2(StreamUnion$Input);\n    id3(StreamSuppliers$OfIterator)--\x3eid4(StreamUnion$Input);\n    id5(StreamSuppliers$OfIterator)--\x3eid6(StreamUnion$Input);\n    id2--\x3eStreamUnion;\n    id4--\x3eStreamUnion;\n    id6--\x3eStreamUnion;\n    StreamUnion--\x3eStreamUnion$Output;\n    StreamUnion$Output--\x3eStreamConsumerToList;\n",mdxType:"Mermaid"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(s.Z,{url:"/examples/core/datastream/src/main/java/BuiltinNodesExample.java",mdxType:"Githublink"},"See full example on GitHub"))))}h.isMDXComponent=!0},11748:function(e,t,a){var r={"./locale":89234,"./locale.js":89234};function n(e){var t=i(e);return a(t)}function i(e){if(!a.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}n.keys=function(){return Object.keys(r)},n.resolve=i,e.exports=n,n.id=11748}}]);