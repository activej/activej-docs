"use strict";(self.webpackChunkactivejdocs=self.webpackChunkactivejdocs||[]).push([[7259],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return v}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),p=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(o.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(t),v=a,m=u["".concat(o,".").concat(v)]||u[v]||d[v]||c;return t?r.createElement(m,i(i({ref:n},l),{},{components:t})):r.createElement(m,i({ref:n},l))}));function v(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=t.length,i=new Array(c);i[0]=u;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<c;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},77618:function(e,n,t){var r=t(67294),a=t(39962);n.Z=function(e){var n=e.url,t=e.text,c=e.isInline,i=void 0===c||c,s=e.children,o=(0,a.Z)().siteConfig,p=n.startsWith("/examples")?o.customFields.githubExamplesBranch:o.customFields.githubBranch;return r.createElement("a",{style:i?{}:{display:"block",marginBottom:"16px"},href:o.customFields.githubUrl+"/"+p+n,target:"_blank"},t||s)}},77815:function(e,n,t){t(67294);var r=t(39962);n.Z=function(e){var n=e.name,t=(0,r.Z)().siteConfig;if(!n)throw new Error("Variable name is required");if(void 0===t.customFields[n])throw new Error("Variable "+n+" not exist");return t.customFields[n]}},92763:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return u},default:function(){return m}});var r=t(83117),a=t(80102),c=(t(67294),t(3905)),i=t(77618),s=t(77815),o=["components"],p={description:"\u041c\u043e\u043b\u043d\u0438\u0435\u043d\u043e\u0441\u043d\u044b\u0439 \u0434\u0432\u043e\u0438\u0447\u043d\u044b\u0439 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b \u0434\u043b\u044f \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432",sidebar_label:"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b",keywords:["java","java framework","\u0443\u0447\u0435\u0431\u043d\u0438\u043a","\u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e","memcached","rpc","\u043a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440","\u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435","\u043c\u0438\u043a\u0440\u043e\u0441\u0435\u0440\u0432\u0438\u0441\u044b"]},l="\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b",d={unversionedId:"rpc/basic-examples",id:"rpc/basic-examples",isDocsHomePage:!1,title:"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b",description:"\u041c\u043e\u043b\u043d\u0438\u0435\u043d\u043e\u0441\u043d\u044b\u0439 \u0434\u0432\u043e\u0438\u0447\u043d\u044b\u0439 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b \u0434\u043b\u044f \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432",source:"@site/i18n/ru/docusaurus-plugin-content-docs/current/rpc/basic-examples.mdx",sourceDirName:"rpc",slug:"/rpc/basic-examples",permalink:"/ru/rpc/basic-examples",tags:[],version:"current",frontMatter:{description:"\u041c\u043e\u043b\u043d\u0438\u0435\u043d\u043e\u0441\u043d\u044b\u0439 \u0434\u0432\u043e\u0438\u0447\u043d\u044b\u0439 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b \u0434\u043b\u044f \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432",sidebar_label:"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b",keywords:["java","java framework","\u0443\u0447\u0435\u0431\u043d\u0438\u043a","\u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e","memcached","rpc","\u043a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440","\u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435","\u043c\u0438\u043a\u0440\u043e\u0441\u0435\u0440\u0432\u0438\u0441\u044b"]},sidebar:"docs",previous:{title:"\u041e\u0431\u0437\u043e\u0440",permalink:"/ru/rpc"},next:{title:"\u0425\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0435\u0439-\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439",permalink:"/ru/rpc/key-value-storage"}},u=[{value:"\u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 RPC",id:"\u043f\u0440\u043e\u0441\u0442\u043e\u0439-\u043f\u0440\u0438\u043c\u0435\u0440-rpc",children:[],level:2},{value:"\u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f &quot;\u043a\u0440\u0443\u0433\u043b\u043e\u0433\u043e \u0440\u043e\u043c\u0431\u0430",id:"\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f-\u043a\u0440\u0443\u0433\u043b\u043e\u0433\u043e-\u0440\u043e\u043c\u0431\u0430",children:[],level:2},{value:"\u041a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438 &quot;\u043a\u0440\u0443\u0433\u043b\u044b\u0439 \u0440\u043e\u0431\u0438\u043d&quot; \u0438 &quot;\u043f\u0435\u0440\u0432\u044b\u0439 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0439",id:"\u043a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435-\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438-\u043a\u0440\u0443\u0433\u043b\u044b\u0439-\u0440\u043e\u0431\u0438\u043d-\u0438-\u043f\u0435\u0440\u0432\u044b\u0439-\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0439",children:[],level:2},{value:"\u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0439 \u0448\u0430\u0440\u0434\u0438\u043d\u0433\u0430 \u0438 \u043f\u0435\u0440\u0432\u043e\u0439 \u0432\u0430\u043b\u0438\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438",id:"\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435-\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0439-\u0448\u0430\u0440\u0434\u0438\u043d\u0433\u0430-\u0438-\u043f\u0435\u0440\u0432\u043e\u0439-\u0432\u0430\u043b\u0438\u0434\u043d\u043e\u0439-\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438",children:[],level:2},{value:"\u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f \u0440\u0430\u043d\u0434\u0435\u0432\u0443 \u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f",id:"\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f-\u0440\u0430\u043d\u0434\u0435\u0432\u0443-\u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f",children:[],level:2},{value:"\u0422\u0438\u043f \u0414\u0438\u0441\u043f\u0435\u0442\u0447\u0435\u0440\u0441\u043a\u0430\u044f \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f",id:"\u0442\u0438\u043f-\u0434\u0438\u0441\u043f\u0435\u0442\u0447\u0435\u0440\u0441\u043a\u0430\u044f-\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f",children:[],level:2}],v={toc:u};function m(e){var n=e.components,t=(0,a.Z)(e,o);return(0,c.kt)("wrapper",(0,r.Z)({},v,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435-\u043f\u0440\u0438\u043c\u0435\u0440\u044b"},"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b"),(0,c.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,c.kt)("div",{parentName:"div",className:"admonition-heading"},(0,c.kt)("h5",{parentName:"div"},(0,c.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,c.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,c.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,c.kt)("div",{parentName:"div",className:"admonition-content"},(0,c.kt)("p",{parentName:"div"},"\u0427\u0442\u043e\u0431\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043f\u0440\u0438\u043c\u0435\u0440\u044b, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043a\u043b\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c ActiveJ \u0441 GitHub"),(0,c.kt)("pre",{parentName:"div"},(0,c.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/activej/activej\n")),(0,c.kt)("p",{parentName:"div"},"\u0418 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0435\u0433\u043e \u043a\u0430\u043a \u043f\u0440\u043e\u0435\u043a\u0442 Maven. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u0442\u0435\u0433 ",(0,c.kt)("strong",{parentName:"p"},(0,c.kt)(s.Z,{name:"currentVersion",mdxType:"Variable"})),". \u041f\u0435\u0440\u0435\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u0432 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u0431\u043e\u0440\u043a\u0443 \u043f\u0440\u043e\u0435\u043a\u0442\u0430. ",(0,c.kt)("strong",{parentName:"p"},"\u041f\u0440\u043e\u0441\u0442\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b RPC")," \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u044b \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 ",(0,c.kt)("inlineCode",{parentName:"p"},"activej/examples/cloud/rpc.")),(0,c.kt)("p",{parentName:"div"},"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0439 RPC \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u044b \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 ",(0,c.kt)("inlineCode",{parentName:"p"},"activej/cloud-rpc/src/test/RpcStrategiesTest.")))),(0,c.kt)("h2",{id:"\u043f\u0440\u043e\u0441\u0442\u043e\u0439-\u043f\u0440\u0438\u043c\u0435\u0440-rpc"},"\u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 RPC"),(0,c.kt)("p",null,'\u0412 \u043f\u0440\u0438\u043c\u0435\u0440\u0435 RPC "Hello World" \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 ****, \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0437\u0430\u043f\u0440\u043e\u0441, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0441\u043b\u043e\u0432\u043e ',(0,c.kt)("inlineCode",{parentName:"p"},'"World"')," . \u041a\u043e\u0433\u0434\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0435\u0433\u043e, \u043e\u043d \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0442\u0432\u0435\u0442, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0441\u043b\u043e\u0432\u043e ",(0,c.kt)("inlineCode",{parentName:"p"},'"Hello "'),". \u0415\u0441\u043b\u0438 \u0432\u0441\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u0441\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e, \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0432\u044b\u0432\u043e\u0434 :"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-text"},"\u041f\u043e\u043b\u0443\u0447\u0435\u043d \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: Hello World\n")),(0,c.kt)("p",null,"\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/examples/cloud/rpc/src/main/java/RpcExample.java tag=EXAMPLE",url:"/examples/cloud/rpc/src/main/java/RpcExample.java",tag:"EXAMPLE"},'public class RpcExample extends Launcher {\n  private static final int SERVICE_PORT = 34765;\n\n  @Inject\n  private RpcClient client;\n\n  @Inject\n  private RpcServer server;\n\n  @Inject\n  private Eventloop eventloop;\n\n  @Provides\n  Eventloop eventloop() {\n    return Eventloop.create();\n  }\n\n  @Provides\n  RpcServer rpcServer(Eventloop eventloop) {\n    return RpcServer.create(eventloop)\n        .withMessageTypes(String.class)\n        .withHandler(String.class,\n            request -> Promise.of("Hello " + request))\n        .withListenPort(SERVICE_PORT);\n  }\n\n  @Provides\n  RpcClient rpcClient(Eventloop eventloop) {\n    return RpcClient.create(eventloop)\n        .withMessageTypes(String.class)\n        .withStrategy(server(new InetSocketAddress(SERVICE_PORT)));\n  }\n\n  @ProvidesIntoSet\n  Initializer<ServiceGraphModuleSettings> configureServiceGraph() {\n    // add logical dependency so that service graph starts client only after it started the server\n    return settings -> settings.addDependency(Key.of(RpcClient.class), Key.of(RpcServer.class));\n  }\n\n  @Override\n  protected Module getModule() {\n    return ServiceGraphModule.create();\n  }\n\n  @Override\n  protected void run() throws ExecutionException, InterruptedException {\n    CompletableFuture<Object> future = eventloop.submit(() ->\n        client.sendRequest("World", 1000)\n    );\n    System.out.printf("%nRPC result: %s %n%n", future.get());\n  }\n\n  public static void main(String[] args) throws Exception {\n    RpcExample example = new RpcExample();\n    example.launch(args);\n  }\n}\n')),(0,c.kt)("p",null,(0,c.kt)("inlineCode",{parentName:"p"},"\u041a\u043b\u0430\u0441\u0441 RpcExample")," \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u0442 ",(0,c.kt)("a",{parentName:"p",href:"/ru/boot/launcher"},"ActiveJ ",(0,c.kt)("inlineCode",{parentName:"a"},"Launcher"))," , \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043c\u043e\u0447\u044c \u043d\u0430\u043c \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u044b\u043c \u0446\u0438\u043a\u043b\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f .\n\u0414\u0430\u043b\u0435\u0435 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 Dependency Injection ",(0,c.kt)("a",{parentName:"p",href:"/ru/inject"},"ActiveJ Inject")," , \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c ",(0,c.kt)(i.Z,{url:"/cloud-rpc/src/main/java/io/activej/rpc/server/RpcServer.java",mdxType:"Githublink"},(0,c.kt)("inlineCode",{parentName:"p"},"RpcServer"))," \u0438 ",(0,c.kt)(i.Z,{url:"/cloud-rpc/src/main/java/io/activej/rpc/client/RpcClient.java",mdxType:"Githublink"},(0,c.kt)("inlineCode",{parentName:"p"},"RpcClient"))," \u0441 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f\u043c\u0438 \u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u043c\u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044f\u043c\u0438. ",(0,c.kt)("inlineCode",{parentName:"p"},"RpcClient")," \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0441 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\u043c String \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0441\u0435\u0440\u0432\u0435\u0440 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438. ",(0,c.kt)(i.Z,{url:"/cloud-rpc/src/main/java/io/activej/rpc/client/sender/RpcStrategies.java",mdxType:"Githublink"},"\u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f RPC")," (\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043e\u0434\u043d\u043e\u0433\u043e RPC-\u0441\u0435\u0440\u0432\u0438\u0441\u0430). \u0414\u043b\u044f ",(0,c.kt)("inlineCode",{parentName:"p"},"RpcServer")," \u043c\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0438\u043f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u0441\u0442\u0443\u043f\u0430\u0442\u044c, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 ",(0,c.kt)(i.Z,{url:"/cloud-rpc/src/main/java/io/activej/rpc/server/RpcRequestHandler.java",mdxType:"Githublink"},(0,c.kt)("inlineCode",{parentName:"p"},"RpcRequestHandler"))," \u0438 \u043f\u043e\u0440\u0442 \u0441\u043b\u0443\u0448\u0430\u0442\u0435\u043b\u044f.\n\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043c\u044b \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u043c ",(0,c.kt)("inlineCode",{parentName:"p"},"Launcher"),", \u043c\u044b \u0442\u0430\u043a\u0436\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c 2 \u043c\u0435\u0442\u043e\u0434\u0430: ",(0,c.kt)("inlineCode",{parentName:"p"},"getModule")," \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f ",(0,c.kt)("a",{parentName:"p",href:"/ru/boot/servicegraph"},(0,c.kt)("inlineCode",{parentName:"a"},"ServiceGraphModule"))," \u0438 ",(0,c.kt)("inlineCode",{parentName:"p"},"run")," \u0434\u043b\u044f \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043b\u043e\u0433\u0438\u043a\u0438 \u043f\u0440\u0438\u043c\u0435\u0440\u0430.\n\u041d\u0430\u043a\u043e\u043d\u0435\u0446, \u043c\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c \u043c\u0435\u0442\u043e\u0434 ",(0,c.kt)("inlineCode",{parentName:"p"},"main")," , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442 \u043d\u0430\u0448 \u043f\u0440\u0438\u043c\u0435\u0440.\n\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u043d\u0430 ",(0,c.kt)(i.Z,{url:"/examples/cloud/rpc/src/main/java/RpcExample.java",mdxType:"Githublink"},(0,c.kt)("strong",{parentName:"p"},"GitHub"))),(0,c.kt)("h2",{id:"\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f-\u043a\u0440\u0443\u0433\u043b\u043e\u0433\u043e-\u0440\u043e\u043c\u0431\u0430"},'\u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f "\u043a\u0440\u0443\u0433\u043b\u043e\u0433\u043e \u0440\u043e\u043c\u0431\u0430'),(0,c.kt)("p",null,"ActiveJ RPC \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043f\u0440\u0435\u0434\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438 \u0434\u043b\u044f \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043c\u0435\u0436\u0434\u0443 RPC-\u0441\u0435\u0440\u0432\u0435\u0440\u0430\u043c\u0438 \u0438\u043b\u0438 \u043e\u0441\u043a\u043e\u043b\u043a\u0430\u043c\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432. ",(0,c.kt)(i.Z,{url:"/cloud-rpc/src/main/java/io/activej/rpc/client/sender/RpcStrategyRoundRobin.java",mdxType:"Githublink"},"Round-Robin")," \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0434\u043d\u043e\u0439 \u0438\u0437 \u0441\u0430\u043c\u044b\u0445 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0439: \u043e\u043d\u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u0446\u0438\u043a\u043b\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u044b \u0438\u043b\u0438 \u043e\u0441\u043a\u043e\u043b\u043a\u0438 \u043e\u0434\u0438\u043d \u0437\u0430 \u0434\u0440\u0443\u0433\u0438\u043c.\n\u0412 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0443\u043b RPC *",(0,c.kt)("em",{parentName:"p"}," \u0441 5 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u043c\u0438 "),"\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f\u043c\u0438* \u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0434\u043b\u044f \u043d\u0438\u0445 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044e Round-Robin. \u0414\u0430\u043b\u0435\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u043f\u0443\u043b\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0440\u0430\u043d\u0435\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438. \u0412\u043e\u0442 \u0438 \u0432\u0441\u0435, 100 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0431\u0443\u0434\u0443\u0442 \u0440\u0430\u0432\u043d\u043e\u043c\u0435\u0440\u043d\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u043c\u0435\u0436\u0434\u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u043c\u0438:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/cloud-rpc/src/test/java/io/activej/rpc/client/sender/RpcStrategiesTest.java tag=REGION_1",url:"/cloud-rpc/src/test/java/io/activej/rpc/client/sender/RpcStrategiesTest.java",tag:"REGION_1"},"public void roundRobinTest() {\n  RpcClientConnectionPoolStub pool = new RpcClientConnectionPoolStub();\n  RpcSenderStub connection1 = new RpcSenderStub();\n  RpcSenderStub connection2 = new RpcSenderStub();\n  RpcSenderStub connection3 = new RpcSenderStub();\n  RpcSenderStub connection4 = new RpcSenderStub();\n  RpcSenderStub connection5 = new RpcSenderStub();\n  pool.put(address1, connection1);\n  pool.put(address2, connection2);\n  pool.put(address3, connection3);\n  pool.put(address4, connection4);\n  pool.put(address5, connection5);\n  int iterations = 100;\n  RpcStrategy strategy = roundRobin(servers(address1, address2, address3, address4, address5));\n\n  RpcSender sender = strategy.createSender(pool);\n  for (int i = 0; i < iterations; i++) {\n    sender.sendRequest(new Object(), 50, ignore());\n  }\n\n  List<RpcSenderStub> connections =\n      asList(connection1, connection2, connection3, connection4, connection5);\n  for (int i = 0; i < 5; i++) {\n    assertEquals(iterations / 5, connections.get(i).getRequests());\n  }\n}\n")),(0,c.kt)("p",null,"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u043d\u0430 ",(0,c.kt)(i.Z,{url:"/cloud-rpc/src/test/java/io/activej/rpc/client/sender/RpcStrategiesTest.java#L32",mdxType:"Githublink"},(0,c.kt)("strong",{parentName:"p"},"GitHub"))),(0,c.kt)("h2",{id:"\u043a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435-\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438-\u043a\u0440\u0443\u0433\u043b\u044b\u0439-\u0440\u043e\u0431\u0438\u043d-\u0438-\u043f\u0435\u0440\u0432\u044b\u0439-\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0439"},'\u041a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438 "\u043a\u0440\u0443\u0433\u043b\u044b\u0439 \u0440\u043e\u0431\u0438\u043d" \u0438 "\u043f\u0435\u0440\u0432\u044b\u0439 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0439'),(0,c.kt)("p",null,"\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u043a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438 RPC. \u0412 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043c\u044b \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u043c ",(0,c.kt)(i.Z,{url:"/cloud-rpc/src/main/java/io/activej/rpc/client/sender/RpcStrategyRoundRobin.java",mdxType:"Githublink"},"\u0420\u0430\u0443\u043d\u0434 \u0420\u043e\u0431\u0438\u043d")," \u0438 ",(0,c.kt)(i.Z,{url:"/cloud-rpc/src/main/java/io/activej/rpc/client/sender/RpcStrategyFirstAvailable.java",mdxType:"Githublink"},"\u041f\u0435\u0440\u0432\u044b\u0439 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0439")," \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438.\n\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c 4 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f, \u043d\u0435 \u043f\u043e\u043c\u0435\u0449\u0430\u044f ",(0,c.kt)("em",{parentName:"p"},"connection3")," \u0432 \u043f\u0443\u043b. \u0417\u0430\u0442\u0435\u043c \u043c\u044b \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c 20 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432. \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0432\u0441\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u0440\u043e\u0432\u043d\u0443 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u043c\u0435\u0436\u0434\u0443 ",(0,c.kt)("em",{parentName:"p"},"\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\u043c1")," (\u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043d\u043e \u0432\u0441\u0435\u0433\u0434\u0430 ",(0,c.kt)("em",{parentName:"p"},"\u043f\u0435\u0440\u0432\u044b\u043c \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e"),") \u0438 ",(0,c.kt)("em",{parentName:"p"},"\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\u043c4")," (\u0442\u0430\u043a \u043a\u0430\u043a ",(0,c.kt)("em",{parentName:"p"},"\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u04353")," \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0434\u043b\u044f \u043f\u0443\u043b\u0430):"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/cloud-rpc/src/test/java/io/activej/rpc/client/sender/RpcStrategiesTest.java tag=REGION_2",url:"/cloud-rpc/src/test/java/io/activej/rpc/client/sender/RpcStrategiesTest.java",tag:"REGION_2"},"public void roundRobinAndFirstAvailableTest() {\n  RpcClientConnectionPoolStub pool = new RpcClientConnectionPoolStub();\n  RpcSenderStub connection1 = new RpcSenderStub();\n  RpcSenderStub connection2 = new RpcSenderStub();\n  RpcSenderStub connection3 = new RpcSenderStub();\n  RpcSenderStub connection4 = new RpcSenderStub();\n  pool.put(address1, connection1);\n  pool.put(address2, connection2);\n  // we don't put connection3\n  pool.put(address4, connection4);\n  int iterations = 20;\n  RpcStrategy strategy = roundRobin(\n      firstAvailable(servers(address1, address2)),\n      firstAvailable(servers(address3, address4)));\n\n  RpcSender sender = strategy.createSender(pool);\n  for (int i = 0; i < iterations; i++) {\n    sender.sendRequest(new Object(), 50, assertNoCalls());\n  }\n\n  assertEquals(iterations / 2, connection1.getRequests());\n  assertEquals(0, connection2.getRequests());\n  assertEquals(0, connection3.getRequests());\n  assertEquals(iterations / 2, connection4.getRequests());\n}\n")),(0,c.kt)("p",null,"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u043d\u0430 ",(0,c.kt)(i.Z,{text:"GitHub",url:"/cloud-rpc/src/test/java/io/activej/rpc/client/sender/RpcStrategiesTest.java#L62",mdxType:"Githublink"})),(0,c.kt)("h2",{id:"\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435-\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0439-\u0448\u0430\u0440\u0434\u0438\u043d\u0433\u0430-\u0438-\u043f\u0435\u0440\u0432\u043e\u0439-\u0432\u0430\u043b\u0438\u0434\u043d\u043e\u0439-\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438"},"\u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0439 \u0448\u0430\u0440\u0434\u0438\u043d\u0433\u0430 \u0438 \u043f\u0435\u0440\u0432\u043e\u0439 \u0432\u0430\u043b\u0438\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438"),(0,c.kt)("p",null,"\u0412\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u0438 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0448\u0430\u0440\u0434\u0438\u043d\u0433\u0430 \u0438 \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u043a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u0445 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f\u043c\u0438. \u0412 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c 5 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439, \u043d\u043e \u043d\u0435 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u043c ",(0,c.kt)("em",{parentName:"p"},"connection2")," \u0432 \u043f\u0443\u043b. \u0414\u0430\u043b\u0435\u0435 \u043c\u044b \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0448\u0430\u0440\u0434\u0438\u043d\u0433\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043c\u0435\u0436\u0434\u0443 \u0448\u0430\u0440\u0434\u0430\u043c\u0438 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u041c\u044b \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u043b\u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043d\u0430 \u0434\u0432\u0430 \u043e\u0441\u043a\u043e\u043b\u043a\u0430 \u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b\u0438 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044e ",(0,c.kt)(i.Z,{text:"First Valid Result",url:"/cloud-rpc/src/main/java/io/activej/rpc/client/sender/RpcStrategyFirstValidResult.java",mdxType:"Githublink"})," \u0434\u043b\u044f \u043e\u0431\u043e\u0438\u0445 \u0438\u0437 \u043d\u0438\u0445. \u042d\u0442\u0430 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f \u043f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0432\u0441\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u044b.\n\u0422\u0435\u043f\u0435\u0440\u044c \u043c\u044b \u0432\u0440\u0443\u0447\u043d\u0443\u044e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c 7 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432: ",(0,c.kt)("em",{parentName:"p"}," 4 \u0441 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\u043c ",(0,c.kt)("inlineCode",{parentName:"em"},"0")," , \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u043d\u0438 \u0431\u0443\u0434\u0443\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u044b \u043d\u0430 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 "),"\u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0448\u0430\u0440\u0434\u04301* * 3 \u0441 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\u043c ",(0,c.kt)("inlineCode",{parentName:"p"},"1"),", \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u0441\u0435 \u043e\u043d\u0438 \u0431\u0443\u0434\u0443\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u044b \u043d\u0430 \u0432\u0441\u0435 \u0442\u0440\u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0448\u0430\u0440\u0434\u0430."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/cloud-rpc/src/test/java/io/activej/rpc/client/sender/RpcStrategiesTest.java tag=REGION_3",url:"/cloud-rpc/src/test/java/io/activej/rpc/client/sender/RpcStrategiesTest.java",tag:"REGION_3"},"public void shardingAndFirstValidTest() {\n  RpcClientConnectionPoolStub pool = new RpcClientConnectionPoolStub();\n  RpcSenderStub connection1 = new RpcSenderStub();\n  RpcSenderStub connection2 = new RpcSenderStub();\n  RpcSenderStub connection3 = new RpcSenderStub();\n  RpcSenderStub connection4 = new RpcSenderStub();\n  RpcSenderStub connection5 = new RpcSenderStub();\n  pool.put(address1, connection1);\n  // we don't put connection2\n  pool.put(address3, connection3);\n  pool.put(address4, connection4);\n  pool.put(address5, connection5);\n  int shardsCount = 2;\n  ShardingFunction<Integer> shardingFunction = item -> item % shardsCount;\n  RpcStrategy strategy = sharding(shardingFunction,\n      firstValidResult(servers(address1, address2)),\n      firstValidResult(servers(address3, address4, address5)));\n\n  RpcSender sender = strategy.createSender(pool);\n  sender.sendRequest(0, 50, assertNoCalls());\n  sender.sendRequest(0, 50, assertNoCalls());\n  sender.sendRequest(1, 50, assertNoCalls());\n  sender.sendRequest(1, 50, assertNoCalls());\n  sender.sendRequest(0, 50, assertNoCalls());\n  sender.sendRequest(0, 50, assertNoCalls());\n  sender.sendRequest(1, 50, assertNoCalls());\n\n  assertEquals(4, connection1.getRequests());\n  assertEquals(0, connection2.getRequests());\n  assertEquals(3, connection3.getRequests());\n  assertEquals(3, connection4.getRequests());\n  assertEquals(3, connection5.getRequests());\n}\n")),(0,c.kt)("p",null,"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u043d\u0430 ",(0,c.kt)(i.Z,{url:"/cloud-rpc/src/test/java/io/activej/rpc/client/sender/RpcStrategiesTest.java#L91",mdxType:"Githublink"},(0,c.kt)("strong",{parentName:"p"},"GitHub"))),(0,c.kt)("h2",{id:"\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f-\u0440\u0430\u043d\u0434\u0435\u0432\u0443-\u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f"},"\u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f \u0440\u0430\u043d\u0434\u0435\u0432\u0443 \u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f"),(0,c.kt)("p",null,"\u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f \u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f Rendezvous \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0445\u044d\u0448-\u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f ",(0,c.kt)(i.Z,{url:"/cloud-rpc/src/main/java/io/activej/rpc/client/sender/RpcSender.java",mdxType:"Githublink"},(0,c.kt)("inlineCode",{parentName:"p"},"RpcSender"))," \u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043a\u0430\u0440\u0442\u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432 RPC. \u041a\u0430\u0440\u0442\u0430 \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432 \u043a\u044d\u0448\u0435 \u0438 \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0435\u0441\u0447\u0438\u0442\u0430\u043d\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432 \u0432 \u043e\u043d\u043b\u0430\u0439\u043d/\u043e\u0444\u043b\u0430\u0439\u043d \u0440\u0435\u0436\u0438\u043c.\n\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0431\u0443\u0434\u0443\u0442 \u0440\u0430\u0432\u043d\u043e\u043c\u0435\u0440\u043d\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u043c\u0435\u0436\u0434\u0443 ",(0,c.kt)("em",{parentName:"p"},"\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u04351"),", ",(0,c.kt)("em",{parentName:"p"},"\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u04352"),", \u0438 ",(0,c.kt)("em",{parentName:"p"},"\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u04353"),":"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/cloud-rpc/src/test/java/io/activej/rpc/client/sender/RpcStrategiesTest.java tag=REGION_4",url:"/cloud-rpc/src/test/java/io/activej/rpc/client/sender/RpcStrategiesTest.java",tag:"REGION_4"},"public void rendezvousHashingTest() {\n  RpcClientConnectionPoolStub pool = new RpcClientConnectionPoolStub();\n  RpcSenderStub connection1 = new RpcSenderStub();\n  RpcSenderStub connection2 = new RpcSenderStub();\n  RpcSenderStub connection3 = new RpcSenderStub();\n  RpcSenderStub connection4 = new RpcSenderStub();\n  RpcSenderStub connection5 = new RpcSenderStub();\n  HashFunction<Integer> hashFunction = item -> item;\n  RpcStrategy strategy = rendezvousHashing(hashFunction)\n      .withShard(1, firstAvailable(servers(address1, address2)))\n      .withShard(2, firstAvailable(servers(address3, address4)))\n      .withShard(3, server(address5));\n  int iterationsPerLoop = 1000;\n  RpcSender sender;\n\n  pool.put(address1, connection1);\n  pool.put(address2, connection2);\n  pool.put(address3, connection3);\n  pool.put(address4, connection4);\n  pool.put(address5, connection5);\n  sender = strategy.createSender(pool);\n  for (int i = 0; i < iterationsPerLoop; i++) {\n    sender.sendRequest(i, 50, ignore());\n  }\n")),(0,c.kt)("p",null,"\u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0438\u0437 \u043f\u0443\u043b\u0430, \u0445\u044d\u0448-\u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/cloud-rpc/src/test/java/io/activej/rpc/client/sender/RpcStrategiesTest.java tag=REGION_5",url:"/cloud-rpc/src/test/java/io/activej/rpc/client/sender/RpcStrategiesTest.java",tag:"REGION_5"},"  pool.remove(address3);\n  pool.remove(address4);\n  sender = strategy.createSender(pool);\n  for (int i = 0; i < iterationsPerLoop; i++) {\n    sender.sendRequest(i, 50, ignore());\n  }\n\n  double acceptableError = iterationsPerLoop / 10.0;\n  assertEquals(iterationsPerLoop / 3.0 + iterationsPerLoop / 2.0, connection1.getRequests(), acceptableError);\n  assertEquals(0, connection2.getRequests());\n  assertEquals(iterationsPerLoop / 3.0, connection3.getRequests(), acceptableError);\n  assertEquals(0, connection4.getRequests());\n  assertEquals(iterationsPerLoop / 3.0 + iterationsPerLoop / 2.0, connection5.getRequests(), acceptableError);\n}\n")),(0,c.kt)("p",null,"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u043d\u0430 ",(0,c.kt)(i.Z,{url:"/cloud-rpc/src/test/java/io/activej/rpc/client/sender/RpcStrategiesTest.java#L128",mdxType:"Githublink"},(0,c.kt)("strong",{parentName:"p"},"GitHub"))),(0,c.kt)("h2",{id:"\u0442\u0438\u043f-\u0434\u0438\u0441\u043f\u0435\u0442\u0447\u0435\u0440\u0441\u043a\u0430\u044f-\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f"},"\u0422\u0438\u043f \u0414\u0438\u0441\u043f\u0435\u0442\u0447\u0435\u0440\u0441\u043a\u0430\u044f \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f"),(0,c.kt)("p",null,"\u042d\u0442\u0430 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043c\u0435\u0436\u0434\u0443 \u0448\u0430\u0440\u0434\u0430\u043c\u0438 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0442\u0438\u043f\u043e\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u0412 \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0432\u0441\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b ",(0,c.kt)("strong",{parentName:"p"},"String")," \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043d\u0430 \u043f\u0435\u0440\u0432\u044b\u0439 \u0448\u0430\u0440\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u043c\u0435\u0435\u0442 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044e ",(0,c.kt)("em",{parentName:"p"},"First Valid Result")," \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432. \u0417\u0430\u043f\u0440\u043e\u0441\u044b \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043d\u0430 \u0432\u0442\u043e\u0440\u043e\u0439 \u0448\u0430\u0440\u0434 \u0441\u043e \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0435\u0439 ",(0,c.kt)("em",{parentName:"p"},"First Available")," . \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 ",(0,c.kt)("em",{parentName:"p"},"\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u04351")," \u0438 ",(0,c.kt)("em",{parentName:"p"},"\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u04352")," \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 35 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, ",(0,c.kt)("em",{parentName:"p"},"\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u04353")," - 25 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0430 ",(0,c.kt)("em",{parentName:"p"},"\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u04354")," \u0438 ",(0,c.kt)("em",{parentName:"p"},"\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u04355")," - 0 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 , \u0442\u0430\u043a \u043a\u0430\u043a ",(0,c.kt)("em",{parentName:"p"},"\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u04353")," \u0432\u0441\u0435\u0433\u0434\u0430 \u0431\u044b\u043b\u043e ",(0,c.kt)("em",{parentName:"p"},"First Available"),":"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java",metastring:"url=/cloud-rpc/src/test/java/io/activej/rpc/client/sender/RpcStrategiesTest.java tag=REGION_6",url:"/cloud-rpc/src/test/java/io/activej/rpc/client/sender/RpcStrategiesTest.java",tag:"REGION_6"},'public void typeDispatchTest() {\n  RpcClientConnectionPoolStub pool = new RpcClientConnectionPoolStub();\n  RpcSenderStub connection1 = new RpcSenderStub();\n  RpcSenderStub connection2 = new RpcSenderStub();\n  RpcSenderStub connection3 = new RpcSenderStub();\n  RpcSenderStub connection4 = new RpcSenderStub();\n  RpcSenderStub connection5 = new RpcSenderStub();\n  pool.put(address1, connection1);\n  pool.put(address2, connection2);\n  pool.put(address3, connection3);\n  pool.put(address4, connection4);\n  pool.put(address5, connection5);\n  int timeout = 50;\n  int iterationsPerDataStub = 25;\n  int iterationsPerDataStubWithKey = 35;\n  RpcSender sender;\n  RpcStrategy strategy = typeDispatching()\n      .on(String.class,\n          firstValidResult(servers(address1, address2)))\n      .onDefault(\n          firstAvailable(servers(address3, address4, address5)));\n\n  sender = strategy.createSender(pool);\n  for (int i = 0; i < iterationsPerDataStub; i++) {\n    sender.sendRequest(new Object(), timeout, assertNoCalls());\n  }\n  for (int i = 0; i < iterationsPerDataStubWithKey; i++) {\n    sender.sendRequest("request", timeout, assertNoCalls());\n  }\n\n  assertEquals(iterationsPerDataStubWithKey, connection1.getRequests());\n  assertEquals(iterationsPerDataStubWithKey, connection2.getRequests());\n  assertEquals(iterationsPerDataStub, connection3.getRequests());\n  assertEquals(0, connection4.getRequests());\n  assertEquals(0, connection5.getRequests());\n}\n')),(0,c.kt)("p",null,"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u043d\u0430 ",(0,c.kt)(i.Z,{url:"/cloud-rpc/src/test/java/io/activej/rpc/client/sender/RpcStrategiesTest.java#L172",mdxType:"Githublink"},(0,c.kt)("strong",{parentName:"p"},"GitHub"))))}m.isMDXComponent=!0}}]);