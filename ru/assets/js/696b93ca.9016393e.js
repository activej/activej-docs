"use strict";(self.webpackChunkactivejdocs=self.webpackChunkactivejdocs||[]).push([[8857],{27806:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"ActiveJ 5.4.3 - Simplified custom serializers","metadata":{"permalink":"/ru/blog/2022/09/16/v5.4.3","source":"@site/blog/2022-09-16-v5.4.3.md","title":"ActiveJ 5.4.3 - Simplified custom serializers","description":"ActiveJ v5.4.3 was released on Sep 16,","date":"2022-09-16T00:00:00.000Z","formattedDate":"16 \u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044f 2022 \u0433.","tags":[],"readingTime":0.255,"truncated":false,"authors":[],"nextItem":{"title":"ActiveJ 5.4.2 - Minor bug fixes","permalink":"/ru/blog/2022/09/05/v5.4.2"}},"content":"ActiveJ v5.4.3 was released on Sep 16,\\n2022 ([see on Maven](https://mvnrepository.com/artifact/io.activej/activej/5.4.3)). This release introduces a simplified\\napproach for creating serializers for custom classes.\\n\\n* Added an abstract `SimpleSerializerDef` class that simplifies the creation of custom serializers. Serializers for custom\\nclasses can now be created without the use of the Expressions API"},{"id":"ActiveJ 5.4.2 - Minor bug fixes","metadata":{"permalink":"/ru/blog/2022/09/05/v5.4.2","source":"@site/blog/2022-09-05-v5.4.2.md","title":"ActiveJ 5.4.2 - Minor bug fixes","description":"ActiveJ v5.4.2 was released on Sep 5,","date":"2022-09-05T00:00:00.000Z","formattedDate":"5 \u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044f 2022 \u0433.","tags":[],"readingTime":0.33,"truncated":false,"authors":[],"prevItem":{"title":"ActiveJ 5.4.3 - Simplified custom serializers","permalink":"/ru/blog/2022/09/16/v5.4.3"},"nextItem":{"title":"ActiveJ 5.4.1 - Stream Codecs optimizations","permalink":"/ru/blog/2022/08/31/v5.4.1"}},"content":"ActiveJ v5.4.2 was released on Sep 5,\\n2022 ([see on Maven](https://mvnrepository.com/artifact/io.activej/activej/5.4.2)). This release includes\\nminor bug fixes for stream codecs.\\n\\n* Fixed a bug when a stream codec tried to safely decode more items than are present in the input of the stream. \\n* Relative path tests in [ActiveJ FS](/fs) are ignored when the project directory is located on a drive other than the temporary directory."},{"id":"ActiveJ 5.4.1 - Stream Codecs optimizations","metadata":{"permalink":"/ru/blog/2022/08/31/v5.4.1","source":"@site/blog/2022-08-31-v5.4.1.md","title":"ActiveJ 5.4.1 - Stream Codecs optimizations","description":"ActiveJ v5.4.1 was released on Aug 31,","date":"2022-08-31T00:00:00.000Z","formattedDate":"31 \u0430\u0432\u0433\u0443\u0441\u0442\u0430 2022 \u0433.","tags":[],"readingTime":0.27,"truncated":false,"authors":[],"prevItem":{"title":"ActiveJ 5.4.2 - Minor bug fixes","permalink":"/ru/blog/2022/09/05/v5.4.2"},"nextItem":{"title":"ActiveJ 5.4 - Codegen and Serializer optimizations","permalink":"/ru/blog/2022/08/19/v5.4"}},"content":"ActiveJ v5.4.1 was released on Aug 31,\\n2022 ([see on Maven](https://mvnrepository.com/artifact/io.activej/activej/5.4.1)). This release includes\\noptimizations for Stream Codecs to optimize memory usage.\\n\\n* Optimized encoding and decoding of arrays of primitives, as well as arrays of variable-length ints and longs.\\n* Minimized the required number of flushes when writing data to a byte array."},{"id":"ActiveJ 5.4 - Codegen and Serializer optimizations","metadata":{"permalink":"/ru/blog/2022/08/19/v5.4","source":"@site/blog/2022-08-19-v5.4.md","title":"ActiveJ 5.4 - Codegen and Serializer optimizations","description":"ActiveJ v5.4 was released on Aug 19,","date":"2022-08-19T00:00:00.000Z","formattedDate":"19 \u0430\u0432\u0433\u0443\u0441\u0442\u0430 2022 \u0433.","tags":[],"readingTime":0.805,"truncated":false,"authors":[],"prevItem":{"title":"ActiveJ 5.4.1 - Stream Codecs optimizations","permalink":"/ru/blog/2022/08/31/v5.4.1"},"nextItem":{"title":"ActiveJ 5.3 - JMX improvements","permalink":"/ru/blog/2022/06/17/v5.3"}},"content":"ActiveJ v5.4 was released on Aug 19,\\n2022 ([see on Maven](https://mvnrepository.com/artifact/io.activej/activej/5.4)). This release includes\\nimprovements to [ActiveJ Codegen](/codegen),[ActiveJ Serializer](/serializer), and minor fixes to other\\ncomponents.\\n\\n* [ActiveJ Codegen](/codegen)\\n    * Generated method calls that use `self` instances as method arguments are now automatically resolved.\\n    * Slightly optimized method lookup.\\n* [ActiveJ Serializer](/serializer)\\n    * Optimized serializer builder\'s cache. Ensured that previously defined serializers are reused.\\n    * Ensured that dangling references are cleaned up if serialization fails.\\n* [Net](/async-io/net)\\n    * Fix order of promise completion when SSL socket receives `close_notify` message.\\n* [HTTP](/http)\\n    * Multimap of HTTP headers is now properly resized.\\n    * Fatal errors in HTTP server connections are now handled correctly.\\n    * Added the `HttpMessage#takeBodyStream` method instead of the `HttpMessage#getBodyStream` method as it has a more\\n      semantically correct name. `HttpMessage#getBodyStream` method is now deprecated and is a candidate for removal in\\n      the next major release.\\n* Misc\\n    * Added additional application error logging in Launcher.\\n    * Fixed `@NotNull` annotations for function parameters."},{"id":"ActiveJ 5.3 - JMX improvements","metadata":{"permalink":"/ru/blog/2022/06/17/v5.3","source":"@site/blog/2022-06-17-v5.3.md","title":"ActiveJ 5.3 - JMX improvements","description":"ActiveJ v5.3 was released Jun 17,","date":"2022-06-17T00:00:00.000Z","formattedDate":"17 \u0438\u044e\u043d\u044f 2022 \u0433.","tags":[],"readingTime":0.59,"truncated":false,"authors":[],"prevItem":{"title":"ActiveJ 5.4 - Codegen and Serializer optimizations","permalink":"/ru/blog/2022/08/19/v5.4"},"nextItem":{"title":"ActiveJ 5.2 - Minor improvements","permalink":"/ru/blog/2022/04/19/v5.2"}},"content":"ActiveJ v5.3 was released Jun 17,\\n2022 ([see on Maven](https://mvnrepository.com/artifact/io.activej/activej/5.3)). This release includes\\nminor improvements to JMX, as well as several bug fixes.\\n\\n* JMX\\n  * Added the ability to use custom `JmxReducer`s for `@JmxOperation`s. \\n  * JMX attributes and operations of `Map` type now respect the specified `JmxReducer` when reducing map values.\\n  * Added the ability to specify a predicate for whether worker instances should be registered in JMX or not.\\n* [ActiveJ Codegen](/codegen)\\n  * Ability to use parameterized types for record fields has been added.\\n* [HTTP](/http)\\n  * Fixed a bug with quality factors parsing in headers.\\n  * Improved handling of runtime exceptions.\\n* [Datastream](/async-io/datastream)\\n  * Fixed acknowledgement completion in `StreamReducer` as well as in several `StreamConsumer`s"},{"id":"ActiveJ 5.2 - Minor improvements","metadata":{"permalink":"/ru/blog/2022/04/19/v5.2","source":"@site/blog/2022-04-19-v5.2.md","title":"ActiveJ 5.2 - Minor improvements","description":"ActiveJ v5.2 was released Apr 19,","date":"2022-04-19T00:00:00.000Z","formattedDate":"19 \u0430\u043f\u0440\u0435\u043b\u044f 2022 \u0433.","tags":[],"readingTime":0.59,"truncated":false,"authors":[],"prevItem":{"title":"ActiveJ 5.3 - JMX improvements","permalink":"/ru/blog/2022/06/17/v5.3"},"nextItem":{"title":"ActiveJ 5.1 - Boot and ActiveJ FS improvements","permalink":"/ru/blog/2022/01/04/v5.1"}},"content":"ActiveJ v5.2 was released Apr 19,\\n2022 ([see on Maven](https://mvnrepository.com/artifact/io.activej/activej/5.2)). This release includes\\nminor improvements mainly for [HTTP client/server](/http) and [ActiveJ Serializer](/serializer).\\n\\n* [HTTP](/http)\\n  * Added dedicated enum for setting `SameSite` policy on cookies. \\n  * Malformed HTTP requests now result in a code `400` response rather than connection drop.\\n  * HTTP inspectors can now inspect malformed HTTP requests and responses.\\n  * [RoutingServlet](https://github.com/activej/activej/blob/v5.1.1/core-http/src/main/java/io/activej/http/RoutingServlet.java) now correctly decodes percent-encoded URL path parts.\\n  * Added checks for DNS label sizes.\\n  * Minor improvements of the [UrlParser](https://github.com/activej/activej/blob/v5.1.1/core-http/src/main/java/io/activej/http/UrlParser.java).\\n* [ActiveJ Serializer](/serializer)\\n  * Added additional preconditions for subclass serializer.\\n  * Removed unnecessary caching from [SerializerBuilder](https://github.com/activej/activej/blob/v5.1.1/core-serializer/src/main/java/io/activej/serializer/SerializerBuilder.java).\\n* [ActiveJ FS](/fs)\\n  * Storage paths are now normalized, so local file systems now work properly with relative storage paths."},{"id":"ActiveJ 5.1 - Boot and ActiveJ FS improvements","metadata":{"permalink":"/ru/blog/2022/01/04/v5.1","source":"@site/blog/2022-01-04-v5.1.md","title":"ActiveJ 5.1 - Boot and ActiveJ FS improvements","description":"ActiveJ v5.1 was released Jan 4,","date":"2022-01-04T00:00:00.000Z","formattedDate":"4 \u044f\u043d\u0432\u0430\u0440\u044f 2022 \u0433.","tags":[],"readingTime":0.535,"truncated":false,"authors":[],"prevItem":{"title":"ActiveJ 5.2 - Minor improvements","permalink":"/ru/blog/2022/04/19/v5.2"},"nextItem":{"title":"ActiveJ 5.0 - New major release","permalink":"/ru/blog/2021/10/29/v5.0"}},"content":"ActiveJ v5.1 was released Jan 4,\\n2022 ([see on Maven](https://mvnrepository.com/artifact/io.activej/activej/5.1)). This release includes\\nimprovements to [ActiveJ FS](/fs), [ActiveJ Inject](/inject) and [boot](/boot/launcher) modules in general.\\n\\n* [ActiveJ Inject](/inject) and [boot](/boot/launcher) modules\\n  * [TriggersModule](https://github.com/activej/activej/blob/v5.1/boot-triggers/src/main/java/io/activej/trigger/TriggersModule.java) \\n  now properly handles [optional dependencies](/inject/optional-dependencies)\\n  * Nested optional dependencies (e.g. `OptionalDependency<OptionalDependency<?>>`) are prohibited\\n  * Services (as well as those obtained from an optional dependencies) are guaranteed to start/stop exactly once\\n  * Added shortcuts for obtaining optional dependencies from [Injector](https://github.com/activej/activej/blob/v5.1/core-inject/src/main/java/io/activej/inject/Injector.java)\\n* [ActiveJ FS](/fs)\\n  * Added a new [exception](https://github.com/activej/activej/blob/v5.1/cloud-fs/src/main/java/io/activej/fs/exception/ActiveFsStructureException.java) to\\n  indicate errors in a structure of a file system.\\n  * Added a precondition that checks whether local file systems ([LocalActiveFs](https://github.com/activej/activej/blob/v5.1/cloud-fs/src/main/java/io/activej/fs/LocalActiveFs.java) and \\n  [LocalBlockingFs](https://github.com/activej/activej/blob/v5.1/cloud-fs/src/main/java/io/activej/fs/LocalBlockingFs.java)) were started before being used."},{"id":"ActiveJ 5.0 - New major release","metadata":{"permalink":"/ru/blog/2021/10/29/v5.0","source":"@site/blog/2021-10-29-v5.0.md","title":"ActiveJ 5.0 - New major release","description":"ActiveJ v5.0 was released Oct 29,","date":"2021-10-29T00:00:00.000Z","formattedDate":"29 \u043e\u043a\u0442\u044f\u0431\u0440\u044f 2021 \u0433.","tags":[],"readingTime":1.835,"truncated":false,"authors":[],"prevItem":{"title":"ActiveJ 5.1 - Boot and ActiveJ FS improvements","permalink":"/ru/blog/2022/01/04/v5.1"},"nextItem":{"title":"ActiveJ 4.3 - \u041d\u0435\u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043c\u043e\u0434\u0443\u043b\u0435\u0439","permalink":"/ru/blog/2021/05/28/v4.3"}},"content":"ActiveJ v5.0 was released Oct 29,\\n2021 ([see on Maven](https://mvnrepository.com/artifact/io.activej/activej/5.0)). This release includes\\nmajor changes in [ActiveJ Inject](/inject), [ActiveJ Codegen](/codegen), [ActiveJ Serializer](/serializer)\\n[promises API](/async-io/promise). The release also introduced improved type scanning facility and \\noverall minor improvements in other components.\\n\\n* [ActiveJ Inject](/inject)\\n  * Refactored and simplified inner components to speed up dependency injection and provide better support for binding \\n[specialization](/specializer)\\n  * Simplified type resolution in dependency injection\\n  * Added the ability to transform imported and exported bindings using patterns (see [example](/inject/binding-transformation))\\n  * Replaced `@Optional` annotation with an explicit [OptionalDependency](https://github.com/activej/activej/blob/v5.0/core-inject/src/main/java/io/activej/inject/binding/OptionalDependency.java)\\n  class\\n* [ActiveJ Codegen](/codegen)\\n  * Improved [ClassBuilder](https://github.com/activej/activej/blob/v5.0/core-codegen/src/main/java/io/activej/codegen/ClassBuilder.java) and [DefiningClassLoader](https://github.com/activej/activej/blob/v5.0/core-codegen/src/main/java/io/activej/codegen/DefiningClassLoader.java) classes\\n  * Class generation may now be 100% lazy\\n  * Added in-memory [ClassBuilder](https://github.com/activej/activej/blob/v5.0/core-codegen/src/main/java/io/activej/codegen/ClassBuilder.java) caches\\n  * Added the ability to use [BytecodeStorage](https://github.com/activej/activej/blob/v5.0/core-codegen/src/main/java/io/activej/codegen/BytecodeStorage.java) as a persistent cache for generated bytecode\\n  * Added the ability to call super methods as well as protected methods\\n  * Improved built-in expressions for array/collection/map iteration\\n* [ActiveJ Serializer](/serializer)\\n  * Added the ability to specify serializer annotations directly on type use (see [example](/serializer/examples#path-based-serialization))\\n  * Automatic class member ordering is now supported within the same JVM\\n  * Added support for serializer annotation aliases\\n  * Improved array serialization as well as serialization of booleans\\n  * Refactored class hierarchy of collection serializers. \\n  * Abstract collection serializers now support builder pattern\\n* [Promise](/async-io/promise)\\n  * Greatly improved exception handling\\n  * Renamed promise chaining methods `thenEx` and `mapEx` to `then` and `map`\\n  * Added new conditional chaining methods as well as dedicated null-handling chaining methods \\n  * All the changing methods now take \\"throwing\\" functions. If a checked exception is thrown in a chaining function, \\nthe whole promise is completed exceptionally\\n* Miscellaneous improvements\\n  * Removed `codec` module. Components that require JSON marshalling now internally use the \\n[DSL-JSON](https://github.com/ngs-doo/dsl-json) library  \\n  * Added new [types](https://github.com/activej/activej/tree/v5.0/util-types) module which contains various reflection and type utilities, including advanced type scanner\\n  * [Common](https://github.com/activej/activej/tree/v5.0/util-common) module has been massively refactored to make common functions and components more consistent\\n  * Restructured asynchronous exceptions\\n  * Unchecked exception handling can now be precisely configured using a thread-scoped or global \\n[FatalErrorHandler facility](https://github.com/activej/activej/blob/v5.0/util-common/src/main/java/io/activej/common/exception/FatalErrorHandler.java) \\n  * Made ActiveJ compatible with Java 17\\n  * Added various `DiscoveryService` interfaces for node discovery within server cluster ([RPC](/rpc), [FS](/fs))\\n  * Removed `AsyncServletDecorator` facility\\n  * Removed `StreamCodecRegistry` facility\\n  * Multiple small improvements and fixes"},{"id":"ActiveJ 4.3 - \u041d\u0435\u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043c\u043e\u0434\u0443\u043b\u0435\u0439","metadata":{"permalink":"/ru/blog/2021/05/28/v4.3","source":"@site/i18n/ru/docusaurus-plugin-content-blog/2021-05-28-v4.3.md","title":"ActiveJ 4.3 - \u041d\u0435\u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043c\u043e\u0434\u0443\u043b\u0435\u0439","description":"ActiveJ v4.3 \u0431\u044b\u043b \u0432\u044b\u043f\u0443\u0449\u0435\u043d 28 \u043c\u0430\u044f 2021 (\u0441\u043c. \u043d\u0430 Maven). \u0412 \u044d\u0442\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 \u0431\u044b\u043b\u0438 \u0432\u043d\u0435\u0441\u0435\u043d\u044b \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043c\u043e\u0434\u0443\u043b\u0435\u0439.","date":"2021-05-28T00:00:00.000Z","formattedDate":"28 \u043c\u0430\u044f 2021 \u0433.","tags":[],"readingTime":0.475,"truncated":false,"authors":[],"prevItem":{"title":"ActiveJ 5.0 - New major release","permalink":"/ru/blog/2021/10/29/v5.0"},"nextItem":{"title":"ActiveJ 4.2 - \u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c","permalink":"/ru/blog/2021/04/13/v4.2"}},"content":"ActiveJ v4.3 \u0431\u044b\u043b \u0432\u044b\u043f\u0443\u0449\u0435\u043d 28 \u043c\u0430\u044f 2021 ([\u0441\u043c. \u043d\u0430 Maven](https://mvnrepository.com/artifact/io.activej/activej/4.3)). \u0412 \u044d\u0442\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 \u0431\u044b\u043b\u0438 \u0432\u043d\u0435\u0441\u0435\u043d\u044b \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043c\u043e\u0434\u0443\u043b\u0435\u0439.\\n\\n* \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043d\u043e\u0432\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 `onConnecting` \u0432 [AsyncHttpClient](https://github.com/activej/activej/blob/v4.3/core-http/src/main/java/io/activej/http/AsyncHttpClient.java) \'s `Inspector`. \u0422\u0435\u043f\u0435\u0440\u044c, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043f\u0440\u043e\u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0435\u043d\u044b \u0447\u0435\u0440\u0435\u0437 `JmxInspector#getConnecting` \u0430\u0442\u0442\u0440\u0438\u0431\u0443\u0442\\n* \u041a\u043e\u0433\u0434\u0430 HTTP-\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u043f\u043e\u0441\u0442\u0430\u0432\u0449\u0438\u043a\u043e\u0432 HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u0442\u0435\u043b\u0430 \u043e\u0442\u0432\u0435\u0442\u0430\\n* [ThrottlingController](https://github.com/activej/activej/blob/v4.3/core-eventloop/src/main/java/io/activej/eventloop/inspector/ThrottlingController.java) \u0442\u0435\u043f\u0435\u0440\u044c \u0442\u0440\u043e\u0442\u043b\u0438\u0442 \u0432\u0441\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443, \u0435\u0441\u043b\u0438 \u0437\u0430\u0434\u0430\u0447\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0434\u043e\u043b\u0433\u043e\\n* [ForwardingStreamSupplier](https://github.com/activej/activej/blob/v4.3/core-datastream/src/main/java/io/activej/datastream/ForwardingStreamSupplier.java) \u0442\u0435\u043f\u0435\u0440\u044c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0443\u0437\u0435\u043b `StreamSupplier` \u0434\u043e `StreamConsumer`\\n* \u0418\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0430 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u0430\u044f \u0440\u0435\u043a\u0443\u0440\u0441\u0438\u044f \u0432 [ChannelSerializer](https://github.com/activej/activej/blob/v4.3/core-datastream/src/main/java/io/activej/datastream/csp/ChannelSerializer.java)\\n* \u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0432 [\u0410\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438](https://github.com/activej/activej/blob/v4.3/extra/cloud-lsmt-aggregation/src/main/java/io/activej/aggregation/Aggregation.java) \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0441 \u043d\u0443\u043b\u0435\u0432\u044b\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438\\n* [HyperLogLog](https://github.com/activej/activej/blob/v4.3/extra/cloud-lsmt-aggregation/src/main/java/io/activej/aggregation/measure/HyperLogLog.java) \u0442\u0435\u043f\u0435\u0440\u044c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 `int`"},{"id":"ActiveJ 4.2 - \u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c","metadata":{"permalink":"/ru/blog/2021/04/13/v4.2","source":"@site/i18n/ru/docusaurus-plugin-content-blog/2021-04-13-v4.2.md","title":"ActiveJ 4.2 - \u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c","description":"* ActiveJ Redis client","date":"2021-04-13T00:00:00.000Z","formattedDate":"13 \u0430\u043f\u0440\u0435\u043b\u044f 2021 \u0433.","tags":[],"readingTime":0.645,"truncated":false,"authors":[],"prevItem":{"title":"ActiveJ 4.3 - \u041d\u0435\u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043c\u043e\u0434\u0443\u043b\u0435\u0439","permalink":"/ru/blog/2021/05/28/v4.3"},"nextItem":{"title":"ActiveJ 4.1 - \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0438 \u0443\u043f\u0440\u043e\u0449\u0435\u043d\u0438\u0435","permalink":"/ru/blog/2021/03/19/v4.1"}},"content":"* **[ActiveJ Redis client](https://github.com/activej/activej/tree/v4.2/extra/cloud-redis)**\\n    * \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043c\u0435\u0442\u043e\u0434 `connect()` \u0432 [RedisClient](https://github.com/activej/activej/blob/v4.2/extra/cloud-redis/src/main/java/io/activej/redis/RedisClient.java) , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u044e\u0442 \u0443\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u043e\u0434\u043b\u0438\u043d\u043d\u043e\u0441\u0442\u0438\\n    * \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u043d\u043e\u0432\u044b\u0435 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043c\u043e\u0434\u0443\u043b\u044f ActiveJ:\\n        - [\u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0439 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438](https://github.com/activej/activej/blob/v4.2/extra/cloud-redis/src/main/java/io/activej/redis/RedisAuthenticationException.java)\\n        - [\u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430](https://github.com/activej/activej/blob/v4.2/extra/cloud-redis/src/main/java/io/activej/redis/RedisPermissionException.java)\\n* **[RecordScheme](https://github.com/activej/activej/blob/v4.2/core-codegen/src/main/java/io/activej/record/RecordScheme.java)**\\n    * \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u044f \u0432 `RecordScheme`, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 `equals()` \u0438 `hashCode()`\\n    * \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0438 `Comparator`\\n* **[FileLocker](https://github.com/activej/activej/blob/v4.2/util-common/src/main/java/io/activej/common/FileLocker.java)**\\n    * `FileLocker` - \u043e\u0431\u0449\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0439 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\\n    * `FileLocker` \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 `java.io.Closeable` \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\\n* **[StateManager](https://github.com/activej/activej/blob/v4.2/util-state/src/main/java/io/activej/state/StateManager.java)**\\n    * \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u043c\u0435\u0442\u043e\u0434\u044b `tryLoadSnapshot()` \u0438 `tryLoadDiff()` , \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0438\u0435 `null` \u0432\u043c\u0435\u0441\u0442\u043e \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0431\u0440\u043e\u0441\u0430\u0442\u044c \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\\n    * \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043c\u0435\u0442\u043e\u0434 `tryLoad()` \u0432 [FileStateManager](https://github.com/activej/activej/blob/v4.2/util-state/src/main/java/io/activej/state/file/FileStateManager.java) , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `null` \u0432\u043c\u0435\u0441\u0442\u043e \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u0438\u0442\u044c \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\\n    * \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043c\u0435\u0442\u043e\u0434 `save()` \u0432 [FileStateManager](https://github.com/activej/activej/blob/v4.2/util-state/src/main/java/io/activej/state/file/FileStateManager.java) , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0435\u0440\u0435\u0442 \u043d\u0430 \u0441\u0435\u0431\u044f \u0440\u0435\u0432\u0438\u0437\u0438\u044e \u0434\u043b\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0441\\n* \u0423\u043b\u0443\u0447\u0448\u0435\u043d\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441 \u0431\u043e\u043b\u044c\u0448\u0438\u043c\u0438 URL-\u0430\u0434\u0440\u0435\u0441\u0430\u043c\u0438"},{"id":"ActiveJ 4.1 - \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0438 \u0443\u043f\u0440\u043e\u0449\u0435\u043d\u0438\u0435","metadata":{"permalink":"/ru/blog/2021/03/19/v4.1","source":"@site/i18n/ru/docusaurus-plugin-content-blog/2021-03-19-v4.1.md","title":"ActiveJ 4.1 - \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0438 \u0443\u043f\u0440\u043e\u0449\u0435\u043d\u0438\u0435","description":"ActiveJ v4.1 \u0431\u044b\u043b \u0432\u044b\u043f\u0443\u0449\u0435\u043d Mar 19, 2021 (\u0441\u043c. \u043d\u0430 Maven). \u042d\u0442\u043e\u0442 \u0432\u044b\u043f\u0443\u0441\u043a \u0432\u043a\u043b\u044e\u0447\u0430\u043b \u0432 \u0441\u0435\u0431\u044f \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044e \u0438 \u0443\u043f\u0440\u043e\u0449\u0435\u043d\u0438\u0435 HTTP-\u043a\u043e\u0434\u0430, \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432.","date":"2021-03-19T00:00:00.000Z","formattedDate":"19 \u043c\u0430\u0440\u0442\u0430 2021 \u0433.","tags":[],"readingTime":0.785,"truncated":false,"authors":[],"prevItem":{"title":"ActiveJ 4.2 - \u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c","permalink":"/ru/blog/2021/04/13/v4.2"},"nextItem":{"title":"ActiveJ 4.0 - \u0420\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439","permalink":"/ru/blog/2021/02/16/v4.0"}},"content":"ActiveJ v4.1 \u0431\u044b\u043b \u0432\u044b\u043f\u0443\u0449\u0435\u043d Mar 19, 2021 ([\u0441\u043c. \u043d\u0430 Maven](https://mvnrepository.com/artifact/io.activej/activej/4.1)). \u042d\u0442\u043e\u0442 \u0432\u044b\u043f\u0443\u0441\u043a \u0432\u043a\u043b\u044e\u0447\u0430\u043b \u0432 \u0441\u0435\u0431\u044f \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044e \u0438 \u0443\u043f\u0440\u043e\u0449\u0435\u043d\u0438\u0435 HTTP-\u043a\u043e\u0434\u0430, \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432.\\n\\n* **HTTP \u0440\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433 \u0438 \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f**\\n    * \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0438 \u0443\u043f\u0440\u043e\u0449\u0435\u043d\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 HTTP, \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 \u0438 URL-\u0430\u0434\u0440\u0435\u0441\u043e\u0432\\n    * \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0434\u043b\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 HTTP, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0437\u0430\u0449\u0438\u0449\u0430\u044e\u0442 \u043e\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439\\n    * \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f HTTP ([HttpRequest](https://github.com/activej/activej/blob/v4.1/core-http/src/main/java/io/activej/http/HttpRequest.java) \u0434\u043b\u044f [AsyncHttpClient](https://github.com/activej/activej/blob/v4.1/core-http/src/main/java/io/activej/http/AsyncHttpClient.java) / [HttpResponse](https://github.com/activej/activej/blob/v4.1/core-http/src/main/java/io/activej/http/HttpResponse.java) \u0432 [AsyncServlet](https://github.com/activej/activej/blob/v4.1/core-http/src/main/java/io/activej/http/AsyncServlet.java)) \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u0443\u0442\u0438\u043b\u0438\u0437\u0438\u0440\u0443\u044e\u0442\u0441\u044f (\u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435\u043b\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043f\u0440\u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u0438), \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0434\u0430\u0432\u0430\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u0445\\n* \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043c\u0435\u0442\u043e\u0434 `Promise<Void> fetch()` \u0432 [OTStateManager](https://github.com/activej/activej/blob/v4.1/extra/cloud-ot/src/main/java/io/activej/ot/OTStateManager.java). \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0431\u0435\u0437 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043a \u0442\u0435\u043a\u0443\u0449\u0435\u043c\u0443 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044e.\\n* \u0423\u043b\u0443\u0447\u0448\u0435\u043d\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0434\u0435\u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u0435\u0439 \u0432 [Serializer ActiveJ](https://serializer.activej.io/)\\n* \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e [Initializer](https://github.com/activej/activej/blob/v4.1/util-common/src/main/java/io/activej/common/api/Initializer.java)\u0441 \u0434\u043b\u044f \u043e\u0431\u0449\u0438\u0445 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432\\n* \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u043f\u0440\u0438 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0438 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u043a [LogOTState](https://github.com/activej/activej/blob/v4.1/extra/cloud-etl/src/main/java/io/activej/etl/LogOTState.java)\\n* \u0423\u0434\u0430\u043b\u0435\u043d [JmxModule](https://github.com/activej/activej/blob/v4.1/boot-jmx/src/main/java/io/activej/jmx/JmxModule.java) \u0438\u0437 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 HTTP-\u043b\u0430\u0443\u043d\u0447\u0435\u0440\u043e\u0432\\n* \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u043d\u043e\u0432\u0430\u044f \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 JMX \u0432 [RpcClient](https://github.com/activej/activej/blob/v4.1/cloud-rpc/src/main/java/io/activej/rpc/client/RpcClient.java) \u0434\u043b\u044f \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0430 \u043d\u0435 \u043e\u0442\u0432\u0435\u0447\u0430\u044e\u0449\u0438\u0445 RPC-\u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432\\n* \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d [ApplicationSettings](https://github.com/activej/activej/blob/v4.1/util-common/src/main/java/io/activej/common/ApplicationSettings.java) \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `Locale`\\n* \u0427\u0442\u043e\u0431\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u043a\u0430\u043b\u044c `en-US` \u043f\u0440\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 [EventStats](https://github.com/activej/activej/blob/v4.1/boot-jmx-stats/src/main/java/io/activej/jmx/stats/EventStats.java) \u0438 [ValueStats](https://github.com/activej/activej/blob/v4.1/boot-jmx-stats/src/main/java/io/activej/jmx/stats/ValueStats.java)"},{"id":"ActiveJ 4.0 - \u0420\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439","metadata":{"permalink":"/ru/blog/2021/02/16/v4.0","source":"@site/i18n/ru/docusaurus-plugin-content-blog/2021-02-16-v4.0.md","title":"ActiveJ 4.0 - \u0420\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439","description":"ActiveJ v4.0 \u0431\u044b\u043b \u0432\u044b\u043f\u0443\u0449\u0435\u043d \u0432 \u0441\u0432\u0435\u0442 16 \u0444\u0435\u0432\u0440\u0430\u043b\u044f 2021 (\u0441\u043c. \u043d\u0430 Maven). \u042d\u0442\u043e\u0442 \u0432\u044b\u043f\u0443\u0441\u043a \u0432\u043a\u043b\u044e\u0447\u0430\u043b \u0432 \u0441\u0435\u0431\u044f \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0440\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439. \u042d\u0442\u043e\u0442 \u0440\u0435\u043b\u0438\u0437 \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u0443\u044e \u0432\u044b\u0441\u043e\u043a\u0443\u044e \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c ActiveJ Redis. \u0414\u0440\u0443\u0433\u0438\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0434\u043b\u044f \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438.","date":"2021-02-16T00:00:00.000Z","formattedDate":"16 \u0444\u0435\u0432\u0440\u0430\u043b\u044f 2021 \u0433.","tags":[],"readingTime":1.285,"truncated":false,"authors":[],"prevItem":{"title":"ActiveJ 4.1 - \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0438 \u0443\u043f\u0440\u043e\u0449\u0435\u043d\u0438\u0435","permalink":"/ru/blog/2021/03/19/v4.1"}},"content":"ActiveJ v4.0 \u0431\u044b\u043b \u0432\u044b\u043f\u0443\u0449\u0435\u043d \u0432 \u0441\u0432\u0435\u0442 16 \u0444\u0435\u0432\u0440\u0430\u043b\u044f 2021 ([\u0441\u043c. \u043d\u0430 Maven](https://mvnrepository.com/artifact/io.activej/activej/4.0)). \u042d\u0442\u043e\u0442 \u0432\u044b\u043f\u0443\u0441\u043a \u0432\u043a\u043b\u044e\u0447\u0430\u043b \u0432 \u0441\u0435\u0431\u044f \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0440\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439. \u042d\u0442\u043e\u0442 \u0440\u0435\u043b\u0438\u0437 \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u0443\u044e \u0432\u044b\u0441\u043e\u043a\u0443\u044e \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c ActiveJ Redis. \u0414\u0440\u0443\u0433\u0438\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0434\u043b\u044f \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438.\\n\\n* **\u0420\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439**\\n    * \u0412\u0441\u0435 \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0431\u044b\u043b\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u044b/\u0441\u043a\u0440\u044b\u0442\u044b.\\n    * **StacklessException** \u0431\u044b\u043b \u0443\u0434\u0430\u043b\u0435\u043d. \u041a\u043b\u0430\u0441\u0441\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0430\u0441\u0448\u0438\u0440\u0438\u043b\u0438 **StacklessException** \u0442\u0435\u043f\u0435\u0440\u044c \u043f\u0440\u043e\u0434\u043b\u0435\u0432\u0430\u044e\u0442 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0435 **Exception**, \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u0437 \u043d\u0438\u0445 \u0432\u0441\u0435 \u0435\u0449\u0435 *stackless*. *Stackless* \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0442\u0440\u0430\u0441\u0441\u0438\u0440\u043e\u0432\u043a\u0443 \u0441\u0442\u0435\u043a\u0430 \u0434\u043b\u044f \u0446\u0435\u043b\u0435\u0439 \u043e\u0442\u043b\u0430\u0434\u043a\u0438. \u042d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0434\u043e\u0441\u0442\u0438\u0433\u043d\u0443\u0442\u043e \u043f\u0443\u0442\u0435\u043c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 [ApplicationSetting](https://github.com/activej/activej/blob/v4.0/util-common/src/main/java/io/activej/common/ApplicationSettings.java) `withStackTrace` \u043d\u0430 **true**.\\n    * \u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f:\\n        * **ParseException** -> [MalformedDataException](https://github.com/activej/activej/blob/v4.0/util-common/src/main/java/io/activej/common/exception/MalformedDataException.java)\\n        * **HttpException** -> [HttpError](https://github.com/activej/activej/blob/v4.0/core-http/src/main/java/io/activej/http/HttpError.java) ([HttpException](https://github.com/activej/activej/blob/v4.0/core-http/src/main/java/io/activej/http/HttpException.java) \u0442\u0435\u043f\u0435\u0440\u044c \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u043a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0434\u0440\u0443\u0433\u0438\u0445 HTTP \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439)\\n        * **OTTransformException** -> [\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435](https://github.com/activej/activej/blob/v4.0/extra/cloud-ot/src/main/java/io/activej/ot/exception/TransformException.java)\\n        * **OTNoCommitException** -> [NoCommitException](https://github.com/activej/activej/blob/v4.0/extra/cloud-ot/src/main/java/io/activej/ot/exception/NoCommitException.java)\\n    * \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u043d\u043e\u0432\u044b\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432 \u0432\u0435\u0440\u0445\u043d\u0435\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u0438 \u0442.\u0434.\\n* \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u043b\u0435\u0433\u043a\u0438\u0439 \u0432\u044b\u0441\u043e\u043a\u043e\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 [ActiveJ Redis \u043a\u043b\u0438\u0435\u043d\u0442](https://github.com/activej/activej/tree/v4.0/extra/cloud-redis) \u0441 \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u043c\u044b\u043c API. [\u041f\u0440\u0438\u043c\u0435\u0440\u044b](https://github.com/activej/activej/tree/v4.0/examples/cloud/redis) \u0438 [\u0431\u0435\u043d\u0447\u043c\u0430\u0440\u043a\u0438](https://github.com/activej/activej/tree/v4.0/benchmarks/redis) \u0434\u043b\u044f Redis \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0442\u0430\u043a\u0436\u0435 \u0431\u044b\u043b\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b.\\n* \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0432 \u0441\u0435\u0442\u0435\u0432\u043e\u043c \u043a\u043e\u0434\u0435, HTTP-\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 (\u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 pipelining) \u0438 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\\n* \u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d **ByteBufQueue** -> [ByteBufs](https://github.com/activej/activej/blob/v4.0/core-bytebuf/src/main/java/io/activej/bytebuf/ByteBufs.java). \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d byte index **ByteScanner**, \u0443\u043b\u0443\u0447\u0448\u0435\u043d `ByteBufs::scanBytes`. \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043c\u0435\u0442\u043e\u0434 `ByteBufs::consumeBytes`, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043a\u0430\u043a `ByteBufs::scanBytes`, \u043d\u043e \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u043f\u043e\u0442\u0440\u0435\u0431\u043b\u044f\u0435\u0442 \u0441\u043a\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 bytes/bufs.\\n* \u0423\u0434\u0430\u043b\u0435\u043d\u043e **StreamMapper**, \u0442\u0435\u043f\u0435\u0440\u044c \u0441\u043e\u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0434\u043e\u0441\u0442\u0438\u0433\u043d\u0443\u0442\u043e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e `StreamFilter.mapper(Function<I, O>)`\\n* \u0423\u0434\u0430\u043b\u0435\u043d\u044b **\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c**, **\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0421\u0442\u0440\u0438\u043c\u0430**, **AbstractStreamReducer**, **\u043a\u043b\u0430\u0441\u0441\u044b StreamMerger**. \u0421\u043b\u0438\u044f\u043d\u0438\u0435 \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u043e \u0447\u0435\u0440\u0435\u0437 [StreamReducer](https://github.com/activej/activej/blob/v4.0/core-datastream/src/main/java/io/activej/datastream/processor/StreamReducer.java)\\n* \u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043e **MergeSortReducer** -> **MergeReducer**, **MergeDistinctReducer** -> **DeduplicateReducer**\\n* \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0447\u0443\u0436\u0438\u0445 \u0447\u0430\u043d\u043a\u043e\u0432 \u0438\u0437 [Cube](https://github.com/activej/activej/blob/v4.0/extra/cloud-lsmt-cube/src/main/java/io/activej/cube/Cube.java) \u0447\u0435\u0440\u0435\u0437 \u0432\u044b\u0437\u043e\u0432 `Cube::getIrrelevantChunks`. \u041d\u0435\u0440\u0435\u043b\u0435\u0432\u0430\u043d\u0442\u043d\u044b\u0435 \u0447\u0430\u043d\u043a\u0438 \u043c\u043e\u0436\u043d\u043e \u043e\u0447\u0438\u0441\u0442\u0438\u0442\u044c, \u0432\u044b\u0437\u0432\u0430\u0432 `CubeConsolidationController:::cleanupIrrelevantChunks`.\\n* \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u043e JUnit \u0442\u0435\u0441\u0442 \u043f\u0440\u0430\u0432\u0438\u043b\u043e [ClassBuilderConstantsRule](https://github.com/activej/activej/blob/v4.0/test/src/main/java/io/activej/test/rules/ClassBuilderConstantsRule.java) \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0447\u0442\u043e \u0432\u0441\u0435 [ClassBuilder](https://github.com/activej/activej/blob/v4.0/core-codegen/src/main/java/io/activej/codegen/ClassBuilder.java) \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b \u043e\u0447\u0438\u0449\u0435\u043d\u044b \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u0430.\\n* \u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043e \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u043a\u043b\u0430\u0441\u0441\u043e\u0432/\u043c\u0435\u0442\u043e\u0434\u043e\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0445 *parse*, \u0447\u0442\u043e\u0431\u044b \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c *decode*."}]}')}}]);